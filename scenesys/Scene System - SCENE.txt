th u(NEWCOBJ,Scene Management System <SCENE>,scene,,,,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)

&CMD`+SCENE`PENNMUSH [u(cobj,scene)]=$^(?s)(?\:\+)?(scene|log|pot|summary|observer|partners|plot|scenes|schedule|events|event)(?\:/(\S+?)?)?(?\:/(\d+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+SCENE`MAIN
@set [u(cobj,scene)]/CMD`+SCENE`PENNMUSH=regexp
&CMD`+SCENE`RHOSTMUSH [u(cobj,scene)]=$^(?s)(?\:\+)?(scene|log|pot|summary|observer|partners|plot|scenes|schedule|events|event)(?\:/(\\S+?)?)?(?\:/(\\d+)?)?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+SCENE`MAIN
@set [u(cobj,scene)]/CMD`+SCENE`RHOSTMUSH=regexp
&CMD`+SCENE`MAIN [u(cobj,scene)]=th u(setq,mode,switch(%1,scene,LOG,log,LOG,events,LOG,schedule,LOG,scenes,log,event,LOG,plot,plot,pot,pot,summary,summary,observer,observer,partners,partners));@attach %!/INC`CHECKPC=%#,1;@attach %!/INC`GETSWITCH=%2;th u(setq,page,u(strfirstof,%3,1));@attach %!/INC`%q<mode>`[u(strfirstof,%q<switch>,switch(%1,scenes,UPCOMING,events,UPCOMING,event,UPCOMING,schedule,UPCOMING,MAIN))]=trim(%4),trim(%5),%4[if(strlen(%5),=%5)]
@set [u(cobj,scene)]/CMD`+SCENE`[u(choosegame,RHOSTMUSH,PENNMUSH)]=no_command

&CMD`CHARID [u(cobj,scene)]=$^\+charid(?\: +(.*))?$:@attach %!/CMD`+SCENE`MAIN=+log/id %1,log,id,,%1
@set [u(cobj,scene)]/CMD`CHARID=regexp

&SYSTEM`SWITCHES [u(cobj,scene)]=setunion(u(SWITCHES`%q<mode>`PLAYER),if(u(isadmin,%#),u(SWITCHES`%q<mode>`ADMIN)),|,|)

&SWITCHES`LOG`PLAYER [u(cobj,scene)]=ID|CREATE|LOUDCREATE|START|LOUDSTART|SCHEDULE|RESCHEDULE|JOIN|LEAVE|TITLE|OUTCOME|PITCH|RECALL|FINISH|PAUSE|CONTINUE|START|UNDO|REDO|EDIT|SPOOF|PLOT|OLD|WHO|WITH|EXCLUDE|TAG|UNTAG|MAIL|UPCOMING|MINE|DELETE|OPTIONS|COLORS|SLOTS[if(u(cobj,meetme),|INVITE)]
&SWITCHES`LOG`ADMIN [u(cobj,scene)]=MERGE|CONFIG

&SWITCHES`POT`PLAYER [u(cobj,scene)]=LAST|MAX|LIST|BRIEF|MODE|SUMMARY|TOGGLE
&SWITCHES`SUMMARY`PLAYER [u(cobj,scene)]=SILENT

&SWITCHES`OBSERVER`PLAYER [u(cobj,scene)]=
&SWITCHES`PARTNERS`PLAYER [u(cobj,scene)]=JOIN|LEAVE

&SCENE`CHANGE_STATUS [u(cobj,ccp)]=@dolist/inline/nobreak lattr(%!/SCENE`CHANGE_STATUS`*)={@trigger %!/##=%0,%1,%2,%3,%4,%5,%6,%7,%8,%9};@dolist/inline/nobreak u(filter,HASATTR,children(%!),%b,%b,SCENE`CHANGE_STATUS)={@trigger ##/SCENE`CHANGE_STATUS=%0,%1,%2,%3,%4,%5,%6,%7,%8,%9}
@set [u(cobj,ccp)]/SCENE`CHANGE_STATUS=no_inherit

&INC`LOG`CONFIG [u(cobj,scene)]=@attach %!/INC`CONFIG

&CONFIG`OPTIONS [u(cobj,scene)]=URL|PATH|IDLE|BOARD|BANNER|BANNER_TAGS|BANNER_TIER|TAGGER_VISIBLE|ROLEPLAY_CHANNEL

&CONFIG`URL [u(cobj,scene)]=The base URL for reaching the game's website. Used to generate links. No trailing / please.
&CONFIG`URL`DEFAULT [u(cobj,scene)]=http://www.example.org
&CONFIG`URL`VALID [u(cobj,scene)]=WORD

&CONFIG`PATH [u(cobj,scene)]=The rest of the URL that leads right up to the Scene ID. Used to generate links. Pay attention to the default's format!
&CONFIG`PATH`DEFAULT [u(cobj,scene)]=/scene/scene.php?id=
&CONFIG`PATH`VALID [u(cobj,scene)]=WORD

&CONFIG`BOARD [u(cobj,scene)]=The Board Alias/Number of a BBS Board to use for posting scenes.
&CONFIG`BOARD`DEFAULT [u(cobj,scene)]=
&CONFIG`BOARD`VALID [u(cobj,scene)]=WORD

&CONFIG`BANNER [u(cobj,scene)]=List Events in the Banner (faction) color of their runner on the schedule list?
&CONFIG`BANNER`DEFAULT [u(cobj,scene)]=0
&CONFIG`BANNER`VALID [u(cobj,scene)]=BOOL

&CONFIG`BANNER_TAGS [u(cobj,scene)]=List Tagged players for scheduled scenes using their Faction colors?
&CONFIG`BANNER_TAGS`DEFAULT [u(cobj,scene)]=1
&CONFIG`BANNER_TAGS`VALID [u(cobj,scene)]=BOOL

&CONFIG`BANNER_TIER [u(cobj,scene)]=What Tier shall be used for Banner colors? Leave this at default for 'first match.'
&CONFIG`BANNER_TIER`DEFAULT [u(cobj,scene)]=
&CONFIG`BANNER_TIER`VALID [u(cobj,scene)]=INT

&CONFIG`TAGGER_VISIBLE [u(cobj,scene)]=List Tagged players for scheduled scenes? IF this is disabled, only scene runners and admin can see taggers!
&CONFIG`TAGGER_VISIBLE`DEFAULT [u(cobj,scene)]=1
&CONFIG`TAGGER_VISIBLE`VALID [u(cobj,scene)]=BOOL

&CONFIG`ROLEPLAY_CHANNEL [u(cobj,scene)]=Channel to announce scenes on?
&CONFIG`ROLEPLAY_CHANNEL`DEFAULT [u(cobj,scene)]=
&CONFIG`ROLEPLAY_CHANNEL`VALID [u(cobj,scene)]=WORD

&INC`LOG`OPTIONS [u(cobj,scene)]=@attach %!/INC`OPTION=%0,%1,SCENESYS

&OPTION`OPTIONS [u(cobj,scene)]=BORDERS|UPCOMING|QUOTES|SPEECH

&OPTION`BORDERS [u(cobj,scene)]=Show borders around poses?
&OPTION`BORDERS`DEFAULT [u(Cobj,scene)]=1
&OPTION`BORDERS`VALID [u(Cobj,scene)]=BOOL

&OPTION`UPCOMING [u(cobj,scene)]=Run the +upcoming command at login?
&OPTION`UPCOMING`DEFAULT [u(Cobj,scene)]=1
&OPTION`UPCOMING`VALID [u(Cobj,scene)]=BOOL

&OPTION`QUOTES [u(Cobj,scene)]=Color the quotations of speech with this. "Blah"
&OPTION`QUOTES`DEFAULT [u(Cobj,scene)]=
&OPTION`QUOTES`VALID [u(cobj,scene)]=COLOR

&OPTION`SPEECH [u(Cobj,scene)]=Color text in quotations. "Blah"
&OPTION`SPEECH`DEFAULT [u(Cobj,scene)]=
&OPTION`SPEECH`VALID [u(cobj,scene)]=COLOR

&SYSTEM`NAME [u(cobj,scene)]=SCENESYS
&SYSTEM`OPTIONS [u(Cobj,scene)]=SCENESYS
&SYSTEM`COLORS [u(cobj,scene)]=SCENESYS

&INC`LOG`COLORS [u(Cobj,scene)]=@attach %!/INC`COLOR=%0,%1

@aconnect [u(Cobj,scene)]=@select/inline u(op,SCENESYS,UPCOMING)=1,{@attach %!/CMD`SCENES_UPCOMING}

&CMD`SCENES_UPCOMING [u(cobj,scene)]=$+upcoming:@select/inline t(u(setr,scenes,u(mysql3,GET`UPCOMING`SCENES)))=1,{@attach %!/INC`MSG=Scenes happening within 24 hours: [iter(%q<scenes>,u(pueblize,elements(%i0,1,chr(177)): '[elements(%i0,2,chr(177))]' \([u(fancytime,elements(%i0,3,chr(177)),%#)]\),+log [elements(%i0,1,chr(177))]),chr(176),\,%b)],%0},0,{@attach %!/INC`MSG=No scenes are happening in the next 24 hours. Bummer!,%0}

&Q`GET`UPCOMING`SCENES [u(cobj,scene)]=SELECT scene_id,scene_title,scene_date_scheduled_secs FROM volv_scene WHERE scene_date_scheduled >= NOW() AND scene_date_scheduled <= NOW() + INTERVAL 24 HOUR ORDER BY scene_date_scheduled

&STARTUP [u(cobj,scene)]=@attach/nobreak %!/STARTUP`OVERRIDE;@trigger %!/LOOP`IDLECHECK;@trigger %!/LOOP`POTCLEANUP

&STARTUP`OVERRIDE [u(cobj,scene)]=@select/inline %va=PennMUSH,{@dolist/inline @emit pose say semipose=@hook/override/inline %i0=%!,override`ic},RhostMUSH,{@dolist/inline @emit pose say semipose P S=@hook/ignore %d0}

&LOOP`IDLECHECK [u(cobj,scene)]=@dolist/inline/nobreak/delimit [chr(176)] [u(MYSQL3,LOG`IDLECHECK)]={@attach %!/INC`MSGSCENE=elements(%i0,1,chr(177)),{Scene [elements(%i0,1,chr(177))] - '[elements(%i0,2,chr(177))]' has been automatically marked Unfinished for idleness. Use [u(pueblize,+log/continue [elements(%i0,1,chr(177))])] to resume it.};@attach %!/INC`MSG`CHAN=Scene [elements(%i0,1,chr(177))] - '[elements(%i0,2,chr(177))]' has been automatically marked Unfinished for idleness.;@attach %!/INC`CLEANUPSCENE=elements(%i0,1,chr(177));@attach %!/INC`DOSQL=SET`SCENESTATE,2,elements(%i0,1,chr(177))};@wait 1800=@trigger %!/LOOP`IDLECHECK

&Q`LOG`IDLECHECK [u(cobj,scene)]=SELECT scene_id,scene_title FROM volv_scene_final WHERE scene_date_started IS NOT NULL AND action_count>0 AND action_latest<NOW() - INTERVAL 2 HOUR AND scene_status=0

&Q`SET`SCENESTATE [u(cobj,scene)]=UPDATE vol_scene SET scene_status=? WHERE scene_id=?

&LOOP`POTCLEANUP [u(cobj,scene)]=@attach %!/INC`DOSQL=CLEANUP`POT;@wait mul(60,60,2)=@trigger %!/LOOP`POTCLEANUP

&Q`CLEANUP`POT [u(cobj,scene)]=DELETE FROM vol_messages WHERE message_type=0 AND message_date_created<NOW() - INTERVAL 2 HOUR

@@ --- HOOKS AND POSE RECORDING

&OVERRIDE`IC [u(cobj,scene)]=$^(?s)(pose|semipose|say|@emit)(?\:/noeval)?(?\: +(.*))?$:@check strlen(%2)=@pemit %#=Huh? (Type "help" for help.);@check cor(elock(%l/speech,%#),strlen(get(%l/CREDITS)))={@select/inline strlen(get(%l/SPEECH_LOCK`FAILURE))=>0,{@pemit %#=u(%l/SPEECH_LOCK`FAILURE)},{@attach %!/INC`MSG=ERROR: Permission denied by local speech lock.}};th u(setq,cansql,not(strmatch(sql(SELECT DATABASE()),#-*)));@select/inline %q<cansql>=1,{@attach %!/INC`CHECKPC=%#,1,1};th u(setq,locid,objid(%l));th u(setq,custloc,uldefault(%l/D`CUSTLOC,%l,%#));th u(setq,scene,get(%#/D`SCENE));th u(setq,sceneactive,u(mysql,SELECT`ACTIVE_SCENES,%q<locid>,%q<custloc>));@select/inline cand(%q<cansql>,%q<scene>)=1,{th u(setq,stat,u(mysql3,SELECT`SCENE_STATUS,%q<scene>))};th u(setq,custrecp,u(canhear,uldefault(%l/D`CUSTRECP,lcon(%l),%#)));@select/inline cand(%q<cansql>,%q<scene>)=1,{th u(setq,logged,u(FUN`ISLOGGED,objid(owner(%#)),%q<t1id>,%2,%q<scene>,elements(%q<stat>,2,chr(177)),elements(%q<stat>,1,chr(177)),iter(%q<custrecp>,objid(%i0)),%l,%q<custloc>));@attach %!/INC`CHECKPC=u(firstof,get(%#/D`SCENE`SPOOF),owner(%#)),2,1},0,{th u(setq,logged,0)};th u(setq,basic,u(basicspeak,if(%q<logged>,%q<t2>,%#),switch(%1,pose,:,semipose,;,say,",@emit,|)%2));@select/inline t(%q<logged>)=1,{@select/inline t(u(setr,source,u(mysql,EXISTS`SOURCE,%q<logged>,%q<locid>,%q<custloc>,0)))=0,{@attach %!/INC`DOSQL=NEW`SOURCE/source,%q<logged>,%q<locid>,%q<custloc>,name(%q<locid>),0};@select/inline not(u(setr,t2act,u(mysql,SELECT`ACTOR_ID,%q<scene>,%q<t2id>)))=1,{@attach %!/INC`DOSQL=NEW`ACTOR/t2act,%q<t2id>,%q<scene>};@attach %!/INC`DOSQL=NEW`POSE/pose,%q<source>,%q<t2act>,u(trimlines,%q<basic>);@attach %!/INC`DOSQL=NEW`POSE_RENDER,u(render,u(trimlines,%q<basic>)),%q<pose>;@attach %!/INC`DOSQL=ADD`POSE_COUNT,%q<t2act>;@attach/nobreak %!/INC`RECPOSE=objid(owner(%#)),%q<logged>,u(trimlines,%q<basic>)};th u(setq,markup,u(markup,%2,%q<custrecp>));@attach/nobreak %!/INC`HEADER=%q<logged>,%q<sceneactive>,%q<pose>;@attach/nobreak %!/INC`POTRECORD=%1,%q<markup>;@select/inline %va=PennMUSH,{@message/spoof %q<custrecp>=%q<basic>,%!/FUN`FORMATPOSE,##,if(%q<logged>,%q<t2>,%#),switch(%1,pose,:,semipose,;,say,",@emit,|),%q<markup>,%q<custrecp>},RhostMUSH,{@pemit/list %q<custrecp>=udefault(%!/FUN`FORMATPOSE,%q<basic>,##,if(%q<logged>,%q<t2>,%#),switch(%1,pose,:,semipose,;,say,",@emit,|),%q<markup>,%q<custrecp>)};@attach %!/INC`FOOTER=%q<logged>,%q<sceneactive>,%q<pose>;@select/inline cand(%q<cansql>,%q<scene>,not(%q<logged>))=1,{@attach %!/INC`MSG=ERROR: %q<logged>};@dolist/inline/nobreak u(lattr,%!/OVERRIDE`EXTRA`*)={@attach %!/%i0}
@set u(cobj,scene)/OVERRIDE`IC=regexp

&Q`SELECT`SCENE_STATUS [u(cobj,scene)]=SELECT scene_status,runner_objid FROM volv_scene WHERE scene_id=?
&Q`NEW`SOURCE [u(cobj,scene)]=INSERT INTO vol_action_source (scene_id,source_objid,source_vr,source_name,source_type) VALUES (?,?,?,?,?)
&Q`EXISTS`SOURCE [u(cobj,scene)]=SELECT source_id FROM vol_action_source WHERE scene_id=? and source_objid=? AND source_vr=? AND source_type=? LIMIT 1
&Q`NEW`POSE [u(cobj,scene)]=INSERT INTO vol_action (source_id,actor_id,action_date_created,action_text) VALUES (?,?,UTC_TIMESTAMP(),?)
&Q`NEW`POSE_RENDER [u(cobj,scene)]=UPDATE vol_action SET action_text_render=? WHERE action_id=?
&Q`SELECT`ACTOR_ID [u(cobj,scene)]=SELECT actor_id FROM vol_actor WHERE scene_id=? and character_id=? LIMIT 1
&Q`SELECT`ACTIVE_SCENES [u(cobj,scene)]=SELECT DISTINCT src.scene_id FROM vol_action_source AS src LEFT JOIN vol_scene AS s ON s.scene_id=src.scene_id WHERE src.source_objid=? AND src.source_vr=? AND src.source_type=0 AND s.scene_status=0

&OVERRIDE`IC2 [u(cobj,scene)]=$"*:@attach/command %!/OVERRIDE`IC=,say,%0
&OVERRIDE`IC3 [u(cobj,scene)]=$\:*:@attach/command %!/OVERRIDE`IC=,pose,%0
&OVERRIDE`IC4 [u(cobj,scene)]=$\;*:@attach/command %!/OVERRIDE`IC=,semipose,%0
@select/inline %va=PennMUSH,{@dolist/inline IC2 IC3 IC4=@set u(cobj,scene)/OVERRIDE`%i0=no_command}

&BASICSPEAK [u(cobj,scene)]=u(BASICSPEAK`%va,%0,%1)
&BASICSPEAK`PENNMUSH [u(cobj,scene)]=speak(%0,%1)
&BASICSPEAK`RHOSTMUSH [u(cobj,scene)]=parsestr(%1,%0,",",,owner(%#))

&FUN`FORMATPOSE [u(cobj,scene)]=u(speech,%1,u(colormarkup,%0,%2%3,%1),%0,,SCENESYS,%4)

&FUN`ISLOGGED [u(cobj,scene)]=switch(%5,1,#-1 SCENE %3 IS PAUSED,3,#-1 SCENE %3 IS FINISHED,if(lt(words(%2),10),#-1 POSES REQUIRE 10 WORDS OR MORE,if(gte(words(u(filter,SAMESCENE,%6,%b,%b,%3)),2),if(not(gte(sub(secs(),get(%0/D`SCENE`TIMESTAMP)),mul(60,60,14))),if(strmatch(get(%7/D`SCENE),%3),%3,#-1 SCENE %3 LAST IN ANOTHER ROOM. USE /CONTINUE HERE),#-1 JOIN TIMESTAMP IS MORE THAN 14 HOURS OLD PLEASE REJOIN),#-1 NO ONLINE ROLEPLAY PARTNERS IN ROOM)))

&FIL`SAMESCENE [u(cobj,scene)]=eq(get(%0/D`SCENE),%1)

&INC`HEADER [u(cobj,scene)]=@check u(isic,objid(owner(%#)));th u(setq,poser,ansi(hw,u(getmoniker,%:)) has posed[if(u(setr,spoof,get(%#/D`SCENE`SPOOF)),%B\(as [u(getmoniker,%q<spoof>)]\))]%b);th u(setq,logheader,if(%2,%[[ansi(hg,LOG: %0 - POSE: %2)]%]%B,if(words(%1),%[[ansi(hr,NO LOG: [u(itemize,%1,%b,and,\,)])]%]%B)));@dolist/inline u(setr,footrecp,u(filter,poseheader,%q<custrecp>,%b,%b,%0,%1))={@select/inline t(u(opother,##,SCENESYS,BORDERS))=1,{@pemit ##=u(header,%q<logheader>%q<poser>,##)},{@pemit ##=u(center,%q<logheader>%q<poser>,u(width,##),%B)}}

&FIL`POSEHEADER [u(cobj,scene)]=cor(words(%2),t(u(opother,owner(%0),SCENESYS,BORDERS)))
 
&INC`FOOTER [u(cobj,scene)]=@check u(isic,objid(owner(%#)));th u(setq,poser,End of [ansi(hw,u(getmoniker,objid(owner(%#))))]'s pose[if(u(setr,spoof,get(%#/D`SCENE`SPOOF)),%B\(as [u(getmoniker,%q<spoof>)]\))]%b);@dolist/inline %q<footrecp>={@select/inline t(u(opother,##,SCENESYS,BORDERS))=1,{@pemit ##=u(footer,%q<logheader>%q<poser>,##)}}

@@ --- POT SECTION

&INC`POTRECORD [u(cobj,scene)]=@check cand(u(isic,%#),not(get(%l/D`NOPOT)));@attach %!/INC`DOSQL=INSERT`POT,objid(%l),uldefault(%l/D`CUSTLOC,%l,%#),name(%l),%:,%n,%1;@attach %!/INC`DOSQL=CLEAN`POT;

&Q`INSERT`POT [u(Cobj,scene)]=INSERT INTO vol_messages (message_date_created,message_type,source_objid,source_vr,source_name,speaker_objid,speaker_name,message_contents) VALUES (UTC_TIMESTAMP(),0,?,?,?,?,?,?)
&Q`CLEAN`POT [u(cobj,scene)]=DELETE FROM vol_messages WHERE message_type=0 AND message_date_created<NOW() - INTERVAl 12 HOUR

&INC`POT`MAIN [u(cobj,scene)]=@check cand(u(isic,%#),not(get(%l/D`NOPOT)))=@attach %!/INC`MSG=ERROR: +pot is disabled in this location.;@switch/inline default(%#/D`POT`MODE,0)=0,{@attach %!/INC`POT`LIST},1,{@attach %!/INC`POT`BRIEF}

&INC`POT`BRIEF [u(cobj,scene)]=@check cand(u(isic,%#),not(get(%l/D`NOPOT)))=@attach %!/INC`MSG=ERROR: +pot is disabled in this location.;@select/inline t(u(setr,max,if(u(valnum,%0),%0,default(%#/D`POT`MAX,15))))=0,{th u(setq,max,50)};@check words(u(setr,poses,u(mysql,SELECT`POT_ID,objid(%l),udefault(%l/D`CUSTLOC,%l,%#),%q<max>)))=@attach %!/INC`MSG=No active RP in the room!;@pemit %#=u(HEADER,RP Activity for [u(getmoniker,%l)]);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(20 4 4 [sub(u(width,%#),31)],Name,Pose,Idle,Summary));@pemit %#=u(separator);@dolist/inline revwords(%q<poses>)={th u(setq,data,u(mysql3,SELECT`POT,##));@pemit %#=align(20 4 4 [sub(u(width,%#),31)],u(pueblize,u(getmoniker,elements(%q<data>,2,chr(177))),+pot/last [name(elements(%q<data>,2,chr(177)))]),ansi(u(ryg,round(mul(fdiv(bound(sub(secs(),elements(%q<data>,1,chr(177))),0,3600),3600),100),0)),u(smalltime,sub(secs(),elements(%q<data>,1,chr(177))))),switch(idle(elements(%q<data>,2,chr(177))),-1,ansi(hx,Off),ansi(u(ryg,round(mul(fdiv(bound(idle(elements(%q<data>,2,chr(177))),0,3600),3600),100),0)),u(smalltime,idle(elements(%q<data>,2,chr(177)))))),elements(%q<data>,4,chr(177)))};@pemit %#=u(FOOTER)

&INC`POT`LAST [u(cobj,scene)]=@check cand(u(isic,%#),not(get(%l/D`NOPOT)))=@attach %!/INC`MSG=ERROR: +pot is disabled in this location.;@attach %!/INC`CHECKPC=%0,1;@check u(setr,pose,u(mysql,SELECT`POT_LAST,objid(%l),udefault(%l/D`CUSTLOC,%l,%#),%q<t1objid>,1))=@attach %!/INC`MSG=%q<t1name> hasn't posed in this room.;th u(setq,data,u(mysql3,SELECT`POT,%q<pose>));@pemit %#=u(header,%q<t1name>'s Last Pose [u(smalltime,u(setr,ago,sub(secs(),elements(%q<data>,1,chr(177)))))] Ago);@pemit %#=u(FUN`FORMATPOSE,%#,%q<t1>,|,u(trimlines,elements(%q<data>,3,chr(177))),IC,u(lplayers,%l));@select/inline strlen(u(setr,sum,elements(%q<data>,4,chr(177))))=>0,{@pemit %#=ansi(h,>>> SUMMARY - [u(getmoniker,elements(%q<data>,2,chr(177)))] - <<< - %q<sum>)};@pemit %#=u(FOOTER)

&Q`SELECT`POT_LAST [u(cobj,scene)]=SELECT message_id FROM vol_messages WHERE message_type=0 AND source_objid=? AND source_vr=? AND speaker_objid=? ORDER BY message_date_created DESC LIMIT ?

&INC`POT`MODE [u(cobj,scene)]=&D`POT`MODE %#=u(setr,mode,not(get(%#/D`POT`MODE)));@attach %!/INC`MSG=+pot will now default to +pot/[if(%q<mode>,summary,list)]

&INC`POT`LIST [u(cobj,scene)]=@check cand(u(isic,%#),not(get(%l/D`NOPOT)))=@attach %!/INC`MSG=ERROR: +pot is disabled in this location.;@select/inline u(strfirstof,if(u(valnum,%0),%0),get(%#/D`POT`MAX))=0,{th u(setq,max,50)},>0,{th u(setq,max,%0)},{th u(setq,max,15)};@check words(u(setr,poses,u(mysql,SELECT`POT_ID,objid(%l),udefault(%l/D`CUSTLOC,%l,%#),%q<max>)))=@attach %!/INC`MSG=No active RP in the room!;th u(setq,players,u(lplayers,%l));@pemit %#=u(header,Recent Poses);@dolist revwords(%q<poses>)={th u(setq,data,u(mysql3,SELECT`POT,##));@pemit %#=u(separator,u(getmoniker,elements(%q<data>,2,chr(177))) posed [ansi(c,trim(u(smalltime,sub(secs(),elements(%q<data>,1,chr(177))))))] Ago);@pemit %#=u(FUN`FORMATPOSE,%#,elements(%q<data>,2,chr(177)),|,elements(%q<data>,3,chr(177)),u(lplayers,%l));@select/inline strlen(u(setr,sum,elements(%q<data>,4,chr(177))))=>0,{@pemit %#=ansi(h,>>> SUMMARY - [u(getmoniker,elements(%q<data>,2,chr(177)))] - <<< - %q<sum>)};@select/inline #@=words(%q<poses>),{@pemit %#=u(footer,End of Poses)}}

&Q`SELECT`POT_ID [u(cobj,scene)]=SELECT message_id FROM vol_messages WHERE message_type=0 AND source_objid=? AND source_vr=? ORDER BY message_date_created DESC LIMIT ?
&Q`SELECT`POT [u(cobj,scene)]=SELECT UNIX_TIMESTAMP(message_date_created),speaker_objid,message_contents,message_summary FROM vol_messages WHERE message_id=?

&INC`POT`MAX [u(cobj,scene)]=@check u(valnum,%0)=@attach %!/INC`MSG=ERROR: You must enter a whole number greater than 0 for your maximum poses!;&D`POT`MAX %#=%0;@attach %!/INC`MSG=You will now see only the last %0 poses in +pot.

&INC`POT`TOGGLE [u(cobj,scene)]=@check cor(controls(%#,%l),u(isadmin,%#))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`MSG`ROOM=Pot will [if(u(setr,mode,not(get(%l/D`NOPOT))),no longer,now)]%bfunction in this location.,lcon(%l);&D`NOPOT %l=%q<mode>

&INC`SUMMARY`SILENT [u(cobj,scene)]=@attach %!/INC`SUMMARY`MAIN=%0,%1,%2,1
&INC`SUMMARY`MAIN [u(cobj,scene)]=@stop gt(strlen(%2),1024)=@attach %!/INC`MSG=That summary is too long.;@select/inline %3=1,{@pemit %#=ansi(hx,>>> SILENT SUMMARY: [u(getmoniker,%#)] - %2)},{@pemit/list uldefault(%l/D`CUSTRECP,lcon(%l),%#)=ansi(h,>>> SUMMARY - [u(getmoniker,%#)] <<< - %2)};@select/inline strlen(u(setr,pose,u(mysql,SELECT`POT_LAST,objid(%l),udefault(%l/D`CUSTLOC,%l,%#),objid(owner(%#)),1)))=>0,{@attach %!/INC`DOSQL=SET`SUMMARY,%2,u(render,%2),%q<pose>}

&Q`SET`SUMMARY [u(cobj,scene)]=UPDATE vol_messages SET message_summary=?,message_summary_render=? WHERE message_id=?


@@ --- LOG SECTION -----

&INC`LOG`ID [u(cobj,scene)]=@select/inline t(strlen(%0))=1,{@attach %!/INC`CHECKPC=%0,2},0,{@attach %!/INC`CHECKPC=%#,2};@attach %!/INC`MSG=The Unique ID for %q<t2name> is: [ansi(h,%q<t2id>)]

&INC`VALID`SCENETITLE [u(cobj,scene)]=@check strlen(u(setr,title,stripansi(u(setr,ansititle,trim(%0))))=@attach %!/INC`MSG=ERROR: Scenes must have titles!;@stop u(charsearch,%q<title>,/ %r %t)=@attach %!/INC`MSG=The following characters are not permitted in titles: /\, \%r\, \%t.;@stop isint(%q<title>)=@attach %!/INC`MSG=ERROR: Scene titles may not be numbers.;@stop cand(u(setr,exist_id,u(mysql,SCENE`TITLE_MATCH,%q<title>)),neq(%1,%q<exist_id>))=@attach %!/INC`MSG=ERROR: That title is not unique. Another Scene already uses it!

&INC`LOG`LOUDCREATE [u(cobj,scene)]=@attach %!/INC`LOG`CREATE=%0,%1,%2,1
&INC`LOG`CREATE [u(cobj,scene)]=@attach %!/INC`CHECKPC=u(firstof,get(%#/D`SCENE`SPOOF),%:),2;@check u(isapproved,%q<t2>)=@attach %!/INC`MSG=ERROR: You are not approved!;@check u(isic,%#)=@attach %!/INC`MSG=ERROR: This location is not IC!;@attach %!/INC`VALID`SCENETITLE=%0[if(strlen(%1),=%1)];@attach %!/INC`DOSQL=NEW`SCENE/scene,%q<title>,%q<ansititle>;@attach %!/INC`DOSQL=SET`ACTOR_TYPE,2,%q<scene>,%q<t2id>;@@ @attach %!/INC`DOSQL=SET`STARTED,secs(),%q<scene>;&D`SCENE %l=%q<scene>;@attach %!/INC`LOG`AUTOJOIN=Created;@select/inline t(%3)=1,{@attach %!/INC`MSG`CHAN=[ansi(h,u(getmoniker,%#))] created a Scene at [if(match(u(u(cobj,grid)/FUN`LISTIC),%l),u(pueblize,%l - [name(%l)],+port %l),name(%l))]: Scene %q<scene>[if(strlen(%q<title>),:%b%q<title>)],u(conf,ROLEPLAY_CHANNEL),,1,,1}

&INC`LOG`AUTOJOIN [u(cobj,scene)]=@attach %!/INC`MSG`ROOM=%0 Scene %q<scene>: %q<title>. Newcomers must use [u(pueblize,+log/join %q<scene>,+log/join %q<scene>)] to join it!,u(setr,recip,uldefault(%l/D`CUSTRECP,lcon(%l),%#));@dolist/inline/nobreak u(setr,finalrecip,setunion(u(filter,NOTACTIVE,%q<recip>),%#))={@attach %!/INC`LOG`JOIN`DO=##,%q<scene>};@attach %!/INC`MSG`ROOM=iter(u(sortname,%q<finalrecip>),u(getmoniker,%i0),%b,\,%b) have been Auto-Joined to Scene %q<scene>!;

&INC`LOG`JOIN`DO [u(cobj,scene)]=@check u(setr,actor_id,u(call`2,volp_actor,0,get(%0/D`ID),%1))=@attach %!/INC`MSG=ERROR: Could not join to scene. Reason: %q<actor_id>;&D`SCENE %0=%1;&D`SCENE`TIMESTAMP %0=secs();&V`SCENE %0=%1;&D`SCENE`ACTOR %0=%q<actor_id>;@attach %!/INC`MSG=You are now joined to Scene %1!,%1

&INC`LOG`LEAVE`DO [u(Cobj,scene)]=@attach %!/WIPE=%0,D`SCENE;@attach %!/WIPE=%0,V`SCENE

&Q`SCENE`TITLE_MATCH [u(cobj,scene)]=SELECT scene_id FROM vol_scene WHERE scene_title=? LIMIT 1

&FIL`NOTACTIVE [u(cobj,scene)]=cand(u(isapproved,%0),nor(hasflag(%0,DARK),hidden(%0)),not(get(%0/D`OBSERVER)),hasflag(%0,CONNECTED))

&Q`NEW`SCENE [u(cobj,scene)]=INSERT INTO vol_scene (scene_title,scene_title_ansi,scene_date_created,scene_date_started) VALUES (?,?,UTC_TIMESTAMP(),UTC_TIMESTAMP())
&Q`SET`ACTOR_TYPE [u(cobj,scene)]=INSERT INTO vol_actor (actor_type,scene_id,character_id) VALUES (?,?,?) ON DUPLICATE KEY UPDATE actor_type=VALUES(actor_type)
&Q`NEW`ACTOR [u(cobj,scene)]=INSERT IGNORE INTO vol_actor (character_id,scene_id) VALUES (?,?)

&INC`MESSAGE [u(cobj,scene)]=@attach %!/INC`MSG`ROOM=%1,setunion(setunion(lockfilter(D`SCENE:%0,u(mysql,get`objidsinscene,%0)),%:),iter(uldefault(%l/D`CUSTRECP,lcon(%l),%#),objid(%i0)))
&INC`MSGSCENE [u(cobj,scene)]=@attach %!/INC`MSG`ROOM=%1,setunion(setunion(lockfilter(D`SCENE:%0,setunion(%:,u(mysql,get`objidsinscene,%0))),%:),iter(uldefault(%l/D`CUSTRECP,lcon(%l),%#),objid(%i0)))

&Q`GET`OBJIDSINSCENE [u(cobj,scene)]=SELECT character_objid FROM volv_actor WHERE scene_id=? AND (actor_type>0 OR actor_status>0)

&INC`LOG`JOIN [u(cobj,scene)]=@check u(isapproved,%#)=@attach %!/INC`MSG=ERROR: You are not approved!;@check strlen(%0)=@attach %!/INC`MSG=ERROR: No Scene entered to join!;@select/inline u(valnum,%0)=0,{@attach %!/INC`CHECKPC=%0,2;@check u(valnum,u(setr,scene,get(%q<t2>/D`SCENE)))=@attach %!/INC`MSG=%q<t2name> is not joined to a scene.},1,{@check u(setr,scene,u(mysql,GET`SCENE_EXISTS_ACTIVE,%0))=@attach %!/INC`MSG=Scene '%0' does not exist or is not Active.};@attach %!/INC`LOG`JOIN`DO=%#,%q<scene>;@attach %!/INC`MESSAGE=%q<scene>,u(getmoniker,%#) joined Scene %q<scene>!

&Q`GET`SCENE_EXISTS_ACTIVE [u(cobj,scene)]=SELECT scene_id FROM vol_scene WHERE scene_id=? and scene_status=0

&INC`LOG`LEAVE [u(cobj,scene)]=@check u(setr,scene,get(%#/D`SCENE))=@attach %!/INC`MSG=ERROR: You are not in any scenes!;@attach %!/INC`MESSAGE=%q<scene>,u(getmoniker,%#) has left Scene %q<scene>;@attach %!/INC`LOG`LEAVE`DO=%#

&INC`OWNCHECK [u(cobj,scene)]=@check cor(u(isadmin,%#),eq(u(setr,ownid,u(mysql,get`ownerid,%0)),%1),if(%2,eq(u(mysql,get`plotownerid,%2),%1)))=@attach %!/INC`MSG=Permission denied.
&Q`GET`OWNERID [u(cobj,scene)]=SELECT runner_id FROM volv_scene WHERE scene_id=?
&Q`GET`PLOTOWNERID [u(cobj,scene)]=SELECT runner_id FROM volv_plot WHERE plot_id=?

&INC`LOG`SPOOF [u(cobj,scene)]=@select/inline strlen(%0)=>0,{@select/inline u(isadmin,%#)=1,{@attach %!/INC`CHECKPC=%0,2;th u(setq,spoof,%q<t2objid>)},0,{@check u(setr,accid,u(accid,objid(owner(%#))))=@attach %!/INC`MSG=You don't have an account!;@check isdbref(u(setr,spoof,objid(u(namegrab,u(alts,owner(%#)),%0))))=@attach %!/INC`MSG=ERROR: '%0' is not one of your alts.};&D`SCENE`SPOOF %#=%q<spoof>;@attach %!/INC`MSG=Your poses will now appear to be from [name(%q<spoof>)].},{&D`SCENE`SPOOF %#;@attach %!/INC`MSG=Your poses will appear to be from yourself.};@select/inline u(setr,scene_id,get(%#/D`SCENE))=>0,{@attach %!/INC`LOG`JOIN`DO=%#,%q<scene_id>}

&INC`VALID`SCENE [u(cobj,scene)]=@check strlen(%0)=@attach %!/INC`MSG=Scene ID field empty.;@check u(valnum,%0)=@attach %!/INC`MSG=Scenes must be addressed by their IDs.;@check gt(u(setr,scene,u(mysql,SELECT`SCENE_EXISTS,%0,)),0)=@attach %!/INC`MSG=Scene '%0' could not be found.;
&Q`SELECT`SCENE_EXISTS [u(cobj,scene)]=SELECT scene_id FROM vol_scene WHERE scene_id=?

&INC`LOADSCENE [u(cobj,scene)]=th u(setq,data,u(mysql3,LOAD`SCENE,u(firstof,%q<t2id>,%q<t1id>),%q<scene>,%q<scene>));th null(iter(scene title pitch outcome post created scheduled started finished status logooc ownid ownobjid ownname mystat mytype slots tagcount,u(setq,%i0,elements(%q<data>,inum(0),chr(177)))))

&Q`LOAD`SCENE [u(cobj,scene)]=SELECT s.scene_id,s.scene_title_ansi,s.scene_pitch,s.scene_outcome,s.post_id,s.scene_date_created_secs,s.scene_date_scheduled_secs,s.scene_date_started_secs,s.scene_date_finished_secs,s.scene_status,s.scene_log_ooc,s.runner_id,s.runner_objid,s.runner_name,a.actor_status,a.actor_type,s.scene_max_tags,t.tag_count FROM volv_scene AS s LEFT JOIN vol_actor AS a ON a.scene_id=s.scene_id AND a.character_id=? LEFT JOIN (SELECT scene_id,COUNT(actor_id) AS tag_count FROM volv_actor WHERE scene_id=? AND actor_status=1 GROUP BY actor_status) AS t ON t.scene_id=s.scene_id WHERE s.scene_id=? LIMIT 1

&INC`LOG`TITLE [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`SCENETITLE=%1;@attach %!/INC`DOSQL=SET`TITLE,%q<title>,%q<ansititle>,%q<scene>;@attach %!/INC`MSGSCENE=%q<scene>,[u(getmoniker,%#)] changed Scene %q<scene>'s Title to: %q<ansititle>;@attach %!/INC`UPDATEBB
&Q`SET`TITLE [u(cobj,scene)]=UPDATE vol_scene SET scene_title=?,scene_title_ansi=? WHERE scene_id=?

&INC`LOG`OUTCOME [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Outcome field empty!;@attach %!/INC`DOSQL=SET`OUTCOME,%1,%q<scene>;@attach %!/INC`MSGSCENE=%q<scene>,[u(getmoniker,%#)] changed Scene %q<scene>'s Outcome to: %1
&Q`SET`OUTCOME [u(cobj,scene)]=UPDATE vol_scene SET scene_outcome=? WHERE scene_id=?

&INC`LOG`PITCH [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%1)=@attach %!/INC`MSG=ERROR: Pitch field empty!;@attach %!/INC`DOSQL=SET`Pitch,u(setr,pitch,%1),%q<scene>;@attach %!/INC`MSGSCENE=%q<scene>,[u(getmoniker,%#)] changed Scene %q<scene>'s Pitch.;@attach %!/INC`UPDATEBB
&Q`SET`PITCH [u(cobj,scene)]=UPDATE vol_scene SET scene_pitch=? WHERE scene_id=?

&INC`UPDATEBB [u(cobj,scene)]=@select/inline %q<post>=>0,{@attach %!/INC`DOSQL=UPDATE`POST,u(setr,newpost,u(FUN`FORMATPOST,%q<title>,u(getmoniker,%q<ownobjid>),u(fancytime,%q<scheduled>,u(cobj,scene)),%q<pitch>)),%q<title>,%q<post>;@attach %!/INC`DOSQL=UPDATE`POST_RENDER,u(render,%q<newpost>),%q<post>}

&Q`UPDATE`POST [u(cobj,scene)]=UPDATE vol_bbpost SET post_text=?,post_title=? WHERE post_id=?
&Q`UPDATE`POST_RENDER [u(cobj,scene)]=UPDATE vol_bbpost SET post_text_render=? WHERE post_id=?

&INC`LOG`FINISH [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`DOSQL=SET`FINISH,%q<scene>;@attach %!/INC`MESSAGE=%q<scene>,[u(getmoniker,%#)] has marked Scene %q<scene> Finished!;@attach %!/INC`MSG=Your scene is available at: [u(weblink,[u(conf,URL)][u(conf,PATH)]%q<scene>)];@trigger [u(cobj,ccp)]/SCENE`CHANGE_STATUS=%q<scene>,%q<title>,3,secs(),not(%q<finished>),%q<started>,%q<finished>;@attach %!/INC`CLEANUPSCENE=%q<scene>
&INC`LOG`PAUSE [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`DOSQL=SET`STATE,1,%q<scene>;@attach %!/INC`MESSAGE=%q<scene>,[u(getmoniker,%#)] has marked Scene %q<scene> Paused!;@trigger [u(cobj,ccp)]/SCENE`CHANGE_STATUS=%q<scene>,%q<title>,1,%q<finished>,not(%q<finished>);@attach %!/INC`CLEANUPSCENE=%q<scene>

&INC`LOG`CONTINUE [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>),cand(match(1,%q<status>),u(mysql,COUNT`POSES,%q<scene>,%q<t1id>)))=@attach %!/INC`MSG=ERROR: Permission denied.;@check %q<started>=@attach %!/INC`MSG=ERROR: This scene has not begun! Use +scene/start instead of +scene/continue!;@attach %!/INC`DOSQL=SET`STATE,0,%q<scene>;&D`SCENE %l=%q<scene>;@attach %!/INC`MESSAGE=%q<scene>,[u(getmoniker,%#)] has continued Scene %q<scene>! It will now record new poses.;@attach %!/INC`LOG`JOIN`DO=%#,%q<scene>;@attach %!/INC`LOG`AUTOJOIN=Continued;@trigger [u(cobj,ccp)]/SCENE`CHANGE_STATUS=%q<scene>,%q<title>,0,%q<finished>,not(%q<finished>);

&Q`COUNT`POSES [u(cobj,scene)]=SELECT COUNT(*) FROM volv_action WHERE scene_id=? AND character_id=?

&INC`LOG`LOUDSTART [u(cobj,scene)]=@attach %!/INC`LOG`START=%0,%1,%2,1
&INC`LOG`START [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),eq(2,%q<mytype>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`DOSQL=SET`STATE,0,%q<scene>;@attach %!/INC`DOSQL=SET`STARTED,secs(),%q<scene>;&D`SCENE %l=%q<scene>;@attach %!/INC`MESSAGE=%q<scene>,[u(getmoniker,%#)] has begun Scene %q<scene>!;th u(setq,recip,uldefault(%l/D`CUSTRECP,lcon(%l),%#));@attach %!/INC`LOG`AUTOJOIN=Continued;@attach %!/INC`MSG`ROOM=iter(u(sortname,%q<finalrecip>),u(getmoniker,%i0),%b,\,%b) have been Auto-Joined to Scene %q<scene>!;@select/inline t(%3)=1,{@attach %!/INC`MSG`CHAN=[ansi(h,u(getmoniker,%#))] started a Scene at [if(match(u(u(cobj,grid)/FUN`LISTIC),%l),u(pueblize,%l - [name(%l)],+port %l),name(%l))]: Scene %q<scene>[if(strlen(%q<title>),:%b%q<title>)],u(conf,ROLEPLAY_CHANNEL),,1,,1}

&Q`SET`STATE [u(cobj,scene)]=UPDATE vol_scene SET scene_status=? WHERE scene_id=?
&Q`SET`FINISH [u(cobj,scene)]=UPDATE vol_scene SET scene_date_finished=UTC_TIMESTAMP(),scene_status=3 WHERE scene_id=?
&Q`SET`STARTED [u(cobj,scene)]=UPDATE vol_scene SET scene_date_started=FROM_UNIXTIME(?) WHERE scene_id=?

&INC`CLEANUPSCENE [u(cobj,scene)]=@dolist/inline u(choosegame,lsearch(all,type,player,elock,D`SCENE:%0),search(TYPE=PLAYERS,EVAL=\[eq(get(##/D`SCENE),%0)\]))=@attach %!/INC`LOG`LEAVE`Do=##

&INC`LOG`UNDO [u(cobj,scene)]=@attach %!/INC`CHECKPC=u(firstof,get(%#/D`SCENE`SPOOF),%:),2,1;@attach %!/INC`VALID`SCENE=get(%#/D`SCENE);@attach %!/INC`LOADSCENE;@check eq(%q<status>,0)=@attach %!/INC`MSG=That scene is not Active!;@select/inline strlen(%1)=0,{@check gt(u(setr,pose,u(mysql,SELECT`LAST_POSE,%q<scene>,%q<t2id>,0)),0)=@attach %!/INC`MSG=You have no poses that can be undone.},{@check gt(u(setr,pose,u(mysql,SELECT`POSE_EXISTS,%q<scene>,%q<t2id>,0,%1)),0)=@attach %!/INC`MSG=ERROR: No active pose from you with ID '%1'.};th u(setr,act_id,u(mysql,SELECT`ACTOR_ID,%q<scene>,%q<t2id>));@attach %!/INC`DOSQL=SET`POSE_DELETED,1,%q<pose>;@attach %!/INC`DOSQL=DEC`POSE_COUNT,%q<act_id>;@attach %!/INC`MSGSCENE=%q<scene>,[u(getmoniker,%#)] undid %p previous pose: %q<pose>

&Q`DEC`POSE_COUNT [u(cobj,scene)]=UPDATE vol_actor SET action_count=action_count-1 WHERE actor_id=?

&INC`LOG`REDO [u(cobj,scene)]=@attach %!/INC`CHECKPC=u(firstof,get(%#/D`SCENE`SPOOF),%:),2;@attach %!/INC`VALID`SCENE=get(%#/D`SCENE);@attach %!/INC`LOADSCENE;@check eq(%q<status>,0)=@attach %!/INC`MSG=That scene is not Active!;@select/inline strlen(%1)=0,{@check gt(u(setr,pose,u(mysql,SELECT`LAST_POSE,%q<scene>,%q<t2id>,1)),0)=@attach %!/INC`MSG=You have no deleted poses that can be restored.},{@check gt(u(setr,pose,u(mysql,SELECT`POSE_EXISTS,%q<scene>,%q<t2id>,1,%1)),0)=@attach %!/INC`MSG=ERROR: No deleted pose from you with ID '%1'.};th u(setr,act_id,u(mysql,SELECT`ACTOR_ID,%q<scene>,%q<t2id>));@attach %!/INC`DOSQL=SET`POSE_DELETED,0,%q<pose>;@attach %!/INC`DOSQL=ADD`POSE_COUNT,%q<act_id>;@attach %!/INC`MSGSCENE=%q<scene>,[u(getmoniker,%#)] restored %p previous undone pose: %q<pose>

&Q`ADD`POSE_COUNT [u(cobj,scene)]=UPDATE vol_actor SET action_count=action_count+1 WHERE actor_id=?

&INC`LOG`EDIT [u(cobj,scene)]=@attach %!/INC`CHECKPC=u(firstof,get(%#/D`SCENE`SPOOF),%:),2;@attach %!/INC`VALID`SCENE=get(%#/D`SCENE);@attach %!/INC`LOADSCENE;@check eq(%q<status>,0)=@attach %!/INC`MSG=That scene is not Active!;@check strlen(%0)=@attach %!/INC`MSG=ERROR: Must entered a Pose ID or 'last'!;@select/inline %0=last,{@check gt(u(setr,pose,u(mysql,SELECT`LAST_POSE,%q<scene>,%q<t2id>,0)),0)=@attach %!/INC`MSG=You have no poses that can be undone.},{@check isint(%0)=@attach %!/INC`MSG=ERROR: Must address poses by ID!;@check gt(u(setr,pose,u(mysql,SELECT`POSE_EXISTS,%q<scene>,%q<t2id>,0,%0)),0)=@attach %!/INC`MSG=ERROR: No active pose from you with ID '%0'.};@check strlen(before(%1,^^^))=@attach %!/INC`MSG=ERROR: No text entered to alter!;th u(setq,oldtext,u(mysql,SELECT`TEXT,%q<pose>));@check strlen(u(setr,changed,edit(%q<oldtext>,before(%1,^^^),after(%1,^^^))))=@attach %!/INC`MSG=ERROR: Cannot alter a Pose to nothing.;@stop strmatch(digest(md5,%q<oldtext>),digest(md5,%q<changed>))=@attach %!/INC`MSG=ERROR: Nothing appears to have changed. Check your Before and After and try again.;@attach %!/INC`DOSQL=EDIT`POSE_TEXT,%q<changed>,%q<pose>;@attach %!/INC`DOSQL=EDIT`POSE_TEXT_RENDER,u(render,%q<changed>),%q<pose>;@attach %!/INC`MSGSCENE=%q<scene>,[u(getmoniker,%#)] edited %p previous pose: %q<pose>. ALTERED: >>[before(%1,^^^)]<< TO >>[after(%1,^^^)]<<

&Q`SELECT`LAST_POSE [u(cobj,scene)]=SELECT max(action_id) FROM volv_action WHERE scene_id=? AND character_id=? AND action_is_deleted=?
&Q`SELECT`POSE_EXISTS [u(cobj,scene)]=SELECT action_id FROM volv_action WHERE scene_id=? AND character_id=? AND action_is_deleted=? and action_id=? ORDER BY action_date_created DESC LIMIT 1
&Q`SET`POSE_DELETED [u(cobj,scene)]=UPDATE vol_action SET action_is_deleted=? WHERE action_id=?
&Q`EDIT`POSE_TEXT [u(cobj,scene)]=UPDATE vol_action SET action_text=? WHERE action_id=?
&Q`EDIT`POSE_TEXT_RENDER [u(cobj,scene)]=UPDATE vol_action SET action_text_render=? WHERE action_id=?
&Q`SELECT`TEXT [u(cobj,scene)]=SELECT action_text FROM vol_action WHERE action_id=?

&INC`LOG`RECALL [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@select/inline gt(strlen(%1),0)=1,{@check u(valnum,%1)=@attach %!/INC`MSG=The number of poses must be a whole, positive number.;th u(setq,poses,%1)},0,{th u(setq,poses,15)};th u(setq,dbs,u(lwhoid));th [u(setq,quote,ansi(u(color,%#,QUOTES),"))][u(setq,speechcol,u(color,%#,SPEECH))];@pemit %#=u(HEADER,Scene %q<scene>[if(strlen(%q<title>),:%B%q<title>)]);@dolist/inline revwords(u(mysql,SELECT`RECALL_IDS,%q<scene>,%q<poses>))={th u(setq,data,u(mysql3,LOAD`POSE,##));@pemit %#=u(SEPARATOR,if(isobjid(elements(%q<data>,9,chr(177))),u(getmoniker,elements(%q<data>,9,chr(177))),ansi(hx,elements(%q<data>,10,chr(177)))) Posed on [u(fancytime3,elements(%q<data>,2,chr(177)),%#)]);@pemit %#=u(colormarkup,%#,u(markup,regeditalli(elements(%q<data>,3,chr(177)),v(REG`SPEECH),%q<quote>[ansi(%q<speechcol>,$1)]%q<quote>),%q<dbs>),%1)};@pemit %#=u(FOOTER)

&Q`SELECT`RECALL_IDS [u(cobj,scene)]=SELECT action_id FROM volv_action WHERE action_is_deleted=0 AND scene_id=? ORDER BY action_id DESC LIMIT ?
&Q`LOAD`POSE [u(cobj,scene)]=SELECT action_id,action_date_Created_secs,action_text,action_type,source_objid,source_name,source_type,actor_type,character_objid,character_name FROM volv_action WHERE action_id=?

&INC`LOG`MAIN [u(cobj,scene)]=@select/inline t(strlen(%0))[isint(%0)]=0*,{@attach %!/INC`LOG`PLAYERLIST=%:,%1,%2,0},11,{@attach %!/INC`LOG`DETAILS=%0,%1,%2,%3},10,{@attach %!/INC`LOG`PLAYERLIST=%0,%1,%2,0}

&INC`LOG`OLD [u(cobj,scene)]=@attach %!/INC`LOG`PLAYERLIST=%0,%1,%2,4

&INC`LOG`PLAYERLIST [u(cobj,scene)]=@attach %!/INC`CHECKPC=u(strfirstof,%0,%#),2,1;@pemit %#=u(HEADER,if(strmatch(%q<t2objid>,%:),Your,%q<t2name>'s) [if(%3,Finished,Incomplete)] Scenes);th u(setq,total,u(mysql,COUNT`SCENEMINE,if(%3,=3,<3),%q<t2id>));th u(setq,page,bound(%q<page>,1,u(setr,max,firstof(ceil(fdiv(%q<total>,30)),1))));th u(setq,offset,mul(30,sub(%q<page>,1)));@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(4 41 20 10,ID,Title,Owner,if(%3,Date,Status)));@pemit %#=u(SEPARATOR);@dolist/inline/delimit [chr(176)] [u(mysql3,LOAD`SCENEMINE,if(%3,=3,<3),%q<t2id>,%q<offset>)]={@pemit %#=align(4 41 20 10,u(pueblize,elements(%i0,1,chr(177)),+log [elements(%i0,1,chr(177))]),elements(%i0,2,chr(177)),if(isobjid(elements(%i0,3,chr(177))),u(getmoniker,elements(%i0,3,chr(177))),ansi(hx,elements(%i0,4,chr(177)))),if(%3,u(choosegame,timefmt($m/$d/$y,elements(%i0,7,chr(177)),u(gettz,%#)),ptimefmt($m/$d/$y,elements(%i0,7,chr(177)),u(gettz,%#))),switch(elements(%i0,5,chr(177)),0,Active,1,Paused,2,Scheduled,3,Finished,???)))};@pemit %#=u(FOOTER,if(gt(%q<page>,1),ansi(hg,u(pueblize,<,+log[if(%3,/old)]/[sub(%q<page>,1)] %q<t2>)),ansi(hx,<))%BPage %q<page> of [bound(%q<max>,1)]%B[if(lt(%q<page>,%q<max>),ansi(hg,u(pueblize,>,+log[if(%3,/old)]/[add(%q<page>,1)] %q<t2>)),ansi(hx,>))])

&Q`COUNT`SCENEMINE [u(cobj,scene)]=SELECT count(a.scene_id) FROM vol_actor AS a LEFT JOIN vol_scene AS s ON s.scene_id=a.scene_id WHERE s.scene_status! AND a.character_id=? AND (a.actor_type>0 OR a.action_count>0)
&Q`LOAD`SCENEMINE [u(cobj,scene)]=SELECT a.scene_id,s.scene_title,s.runner_objid,s.runner_name,s.scene_status,s.scene_date_created_secs,s.scene_date_finished_secs,s.scene_outcome FROM vol_actor AS a LEFT JOIN volv_scene AS s ON s.scene_id=a.scene_id WHERE s.scene_status! AND a.character_id=?  AND (a.actor_type>0 OR a.action_count>0) LIMIT 30 OFFSET ?

&INC`LOG`WITH [u(cobj,scene)]=@attach %!/INC`CHECKPC=%0,2;@attach %!/INC`CHECKPC=u(strfirstof,%1,%#),3;@check words(u(setr,withlist,u(mysql3,GET`SCENESWITH,%q<t2id>,%q<t3id>)),chr(176))=@attach %!/INC`MSG=Oops! No scenes in common!;@pemit %#=u(header,Scenes Together: %q<t2name> and %q<t3name>);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(6 30 40,ID,Title,Participants));@pemit %#=u(separator);@dolist/inline/delimit [chr(176)] %q<withlist>={@pemit %#=align(6 30 40,u(pueblize,elements(%i0,1,chr(177)),+log [elements(%i0,1,chr(177))]),elements(%i0,2,chr(177)),iter(u(mysql3,GET`SCENEWITHNAMES,elements(%i0,1,chr(177))),%i0,chr(176),\,%b))};@pemit %#=u(footer,Total: [words(%q<withlist>,chr(176))] Scenes)

&Q`GET`SCENESWITH [u(cobj,scene)]=SELECT s.scene_id,s.scene_title FROM vol_actor AS act LEFT JOIN vol_scene AS s ON s.scene_id=act.scene_id WHERE act.character_id IN(?,?) AND act.action_count>0 GROUP BY act.scene_id HAVING COUNT(DISTINCT act.character_id)=2
&Q`GET`SCENEWITHDET [u(cobj,scene)]=SELECT scene_title FROM vol_scene where scene_id=?
&Q`GET`SCENEWITHNAMES [u(cobj,scene)]=SELECT DISTINCT character_name FROM volv_actor WHERE scene_id=? AND action_count>0 ORDER by character_name

&INC`LOADSCENE`PLOT [u(cobj,scene)]=th u(setq,plots,u(mysql3,LOAD`SCENE_PLOTS,%q<scene>))
&Q`LOAD`SCENE_PLOTS [u(cobj,scene)]=SELECT plot_id,plot_title,plot_date_start_secs,plot_date_end_secs,owner_id,owner_objid,owner_name FROM volv_plotlink WHERE scene_id=?

&INC`LOADSCENE`LOCATIONS [u(cobj,scene)]=th u(setq,locs,u(mysql3,LOAD`SCENE_LOCATIONS,%q<scene>))
&Q`LOAD`SCENE_LOCATIONS [u(cobj,scene)]=SELECT s.source_objid,s.source_name FROM vol_action_source as s WHERE s.scene_id=? AND s.source_type=0 ORDER BY s.source_name

&INC`LOADSCENE`ACTORS [u(cobj,scene)]=th u(setq,actors,u(mysql3,LOAD`SCENE_ACTORS,%q<scene>))
&Q`LOAD`SCENE_ACTORS [u(cobj,scene)]=SELECT character_id,character_objid,character_name,actor_type,actor_status,action_count FROM volv_actor WHERE scene_id=? AND (actor_type>0 OR actor_status>0 OR action_count>0) ORDER BY actor_type DESC,actor_status DESC,character_name ASC

&INC`LOADSCENE`REPORTS [u(cobj,scene)]=th u(setq,reports,u(mysql3,LOAD`SCENE_REPORTS,%q<scene>));
&Q`LOAD`SCENE_REPORTS [u(cobj,scene)]=

&INC`LOG`DETAILS [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;th u(setq,banner,u(conf,BANNER));th u(setq,bannertags,u(conf,BANNER_TAGS));@dolist/inline PLOT LOCATIONS ACTORS REPORTS={@attach %!/INC`LOADSCENE`%i0};@pemit %#=u(HEADER,Scene %q<scene>[if(strlen(%q<title>),:%B%q<title>)]);@dolist/inline HEADER PLOTS REPORTS ACTORS URL={@attach %!/INC`LOG`DETAILS`%i0};@pemit %#=u(FOOTER)

&INC`LOG`DETAILS`HEADER [u(cobj,scene)]=@pemit %#=u(SUBHEADER,Details);@pemit %#=ansi(h,Pitch:)%B%q<pitch>;@pemit %#=ansi(h,Started:) [if(%q<started>,u(fancytime,%q<started>,%#),N/A)]%R[ansi(h,Outcome:)] %q<outcome>%R[ansi(h,Status:)] [switch(%q<status>,0,Active,1,Paused,2,Scheduled,3,Finished)];@select/inline strlen(%q<locs>)=>0,{@pemit %#=[ansi(h,Locations:)]%B[iter(%q<locs>,if(isobjid(elements(%i0,2,chr(177))),u(getmoniker,elements(%i0,2,chr(177))),ansi(hx,elements(%i0,2,chr(177)))),chr(176),\,%b)]};@select/inline %q<scheduled>=>0,{@pemit %#=ansi(h,Scheduled:)%B[u(fancytime2,%q<scheduled>,%#)] \([u(fancytime2,%q<scheduled>,UTC)]\)}

&INC`LOG`DETAILS`ACTORS [u(cobj,scene)]=@select/inline if(cand(eq(2,%q<status>),not(u(conf,TAGGER_VISIBLE))),cor(u(isadmin,%#),match(%q<ownobjid>,%:)),1)=1,{@pemit %#=u(SUBHEADER,Players);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(30 30 15,ansi(h,Name),ansi(h,Status),ansi(h,Poses)));@pemit %#=u(SEPARATOR);@dolist/inline/delimit [chr(176)] %q<actors>={@pemit %#=align(30 30 15,if(isobjid(elements(%i0,2,chr(177))),if(%q<bannertags>,u(getproperty,elements(%i0,2,chr(177)),banner),u(getmoniker,elements(%i0,2,chr(177)))),ansi(hx,elements(%i0,3,chr(177)))),if(eq(elements(%i0,4,chr(177)),2),Creator,switch(elements(%i0,5,chr(177)),0,Untagged,1,Tagged)),elements(%i0,6,chr(177)))};@select/inline gt(u(setr,total,u(mysql,get`sceneposecount,%q<scene>)),0)=1,{@pemit %#=align(30 >30 15,,Total:,%q<total>)}}

&Q`GET`SCENEPOSECOUNT [u(cobj,scene)]=SELECT SUM(action_count) FROM vol_actor WHERE scene_id=?


&INC`LOG`DETAILS`URL [u(cobj,scene)]=@pemit %#=u(SUBHEADER,Url);@pemit %#=ansi(h,URL:) [u(weblink,[u(conf,URL)][u(conf,PATH)]%q<scene>)];

&INC`LOG`DETAILS`REPORTS [u(cobj,scene)]=@select/inline strlen(%q<reports>)=>0,{@pemit %#=u(SUBHEADER,Reports Featuring this Scene);@dolist/inline/delimit [chr(176)] %q<plots>={@pemit %#=align(4 20 10 10 15 7,u(pueblize,elements(%i0,1,chr(177)),+rread [elements(%i0,1,chr(177))]),u(pueblize,elements(%i0,2,chr(177)),+rread [elements(%i0,1,chr(177))]),if(elements(%i0,5,chr(177)),u(fancytime,elements(%i0,5,chr(177)),%#),N/A),if(elements(%i0,6,chr(177)),u(fancytime,elements(%i0,6,chr(177)),%#),N/A),if(isobjid(elements(%i0,8,chr(177))),u(getproperty,elements(%i0,8,chr(177)),banner),ansi(hx,elements(%i0,9,chr(177)))),elements(%i0,4,chr(177)))}}

&INC`LOG`DETAILS`PLOTS [u(cobj,scene)]=@select/inline strlen(%q<plots>)=>0,{@pemit %#=u(SUBHEADER,Plots Featuring this Scene);@dolist/inline/delimit [chr(176)] %q<plots>={@pemit %#=align(4 20 10 10 15 7,u(pueblize,elements(%i0,1,chr(177)),+log [elements(%i0,1,chr(177))]),u(pueblize,elements(%i0,2,chr(177)),+log [elements(%i0,1,chr(177))]),if(elements(%i0,5,chr(177)),u(fancytime,elements(%i0,5,chr(177)),%#),N/A),if(elements(%i0,6,chr(177)),u(fancytime,elements(%i0,6,chr(177)),%#),N/A),if(isobjid(elements(%i0,8,chr(177))),u(getmoniker,elements(%i0,8,chr(177))),ansi(hx,elements(%i0,9,chr(177)))),elements(%i0,4,chr(177)))}}

&INC`LOG`WHO [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@attach %!/INC`MSG=Joined participants for Scene %q<scene>: [u(strfirstof,u(itemize,iter(lsearch(all,type,player,elock,D`SCENE:%q<scene>),name(%i0)[if(strmatch(%l,loc(%i0)),,%b\(not present\))],%b,|),|,and,\,),Nobody!)]

&INC`LOG`DELETE [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),cand(strmatch(%:,%q<ownobjid>),not(u(mysql,action_count,%q<scene>))))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strmatch(%q<title>,%1)=@attach %!/INC`MSG=ERROR: Must include the Scene's Title for verification. Syntax: +log/delete <id>=<title>;@attach %!/INC`VERIFY={[ansi(hr,WARNING:)] This will COMPLETELY DELETE Scene %q<scene>. All associated poses and data will go with it. This will not affect the Wiki's copy. Are you sure? Enter the same command to verify.},DELETE SCENE %q<scene>;@attach %!/INC`MESSAGE=%q<scene>,{[u(getmoniker,%#)] deleted Scene %q<scene>.};@attach %!/INC`DOSQL=DELETE`SCENE,%q<scene>;@attach %!/INC`MSG=You have Deleted Scene %q<scene>. If this was in error use the command again to undo this.;@attach %!/INC`MSG`CHAN=Deleted Scene %q<scene>.;

&Q`DELETE`SCENE [u(cobj,scene)]=DELETE FROM vol_scene WHERE scene_id=?

&Q`action_count [u(cobj,scene)]=SELECT action_count FROM volv_scene_stats WHERE scene_id=?

&INC`LOG`ADD [u(cobj,scene)]=@attach %!/INC`LOG`SCHEDULE
&INC`LOG`SCHEDULE [u(cobj,scene)]=@attach %!/INC`VALID`FUTURE=trim(before(%0,/));@attach %!/INC`VALID`SCENETITLE=after(%0,/);@check strlen(u(setr,desc,%1))=@attach %!/INC`MSG=Your scene needs a Pitch!;@attach %!/INC`DOSQL=NEW`SCHEDULE/scene,u(trimtabs,u(trimlines,%q<title>)),%q<ansititle>,u(trimtabs,u(trimlines,%q<desc>)),%q<value>;@attach %!/INC`DOSQL=SET`ACTOR_TYPE,2,%q<scene>,%q<t1id>;@select/inline cand(isdbref(u(cobj,bbs)),strlen(u(conf,BOARD)),u(setr,bbid,u(mysql,FIND`BB,u(CONF,BOARD))))=1,{@check u(setr,makepost,u(call`6,volp_bbpost,0,%q<t1id>,%q<bbid>,'[sqlescape(#%q<scene>: %q<title>)]','[sqlescape(u(FUN`FORMATPOST,%q<title>,[u(getmoniker,%#)],u(fancytime,%q<value>,,UTC),%q<desc>))]',0,%q<t1idfallback>))=@attach %!/INC`MSG=ERROR: Could not create post. Reason: %q<makepost>;th iter(postid postnum,u(setq,%i0,elements(%q<makepost>,inum(0))));@attach %!/INC`DOSQL=SET`SCENE_POST,%q<postid>,%q<scene>};@attach %!/INC`MSG`NOTICE=Scheduled new [u(pueblize,Scene %q<scene>: '%q<title>',+log %q<scene>)] on ^^^%q<value>^^^,u(lwhoid),,1

&Q`NEW`SCHEDULE [u(cobj,scene)]=INSERT INTO vol_scene (scene_title,scene_title_ansi,scene_pitch,scene_date_scheduled,scene_date_created,scene_status) VALUES (?,?,?,FROM_UNIXTIME(?),UTC_TIMESTAMP(),2)
&Q`SET`SCENE_POST [u(cobj,scene)]=UPDATE vol_scene SET post_id=? WHERE scene_id=?

&Q`FIND`BB [u(cobj,scene)]=SELECT board_id FROM volv_board WHERE board_alias=?

&INC`LOG`TAG [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@stop u(mysql,GET`tagcheck,%q<scene>,%q<t1id>)=@attach %!/INC`MSG=You are already signed up for that scene.;@stop if(%q<slots>,gte(%q<tagcount>,%q<slots>),0)=@attach %!/INC`MSG=ERROR: That scene is full! Check with the runner about whether there's room for you or not.;@attach %!/INC`DOSQL=SET`ACTOR_STATUS,1,%q<scene>,%q<t1id>;@attach %!/INC`MSG=You have tagged Scene %0!;@attach %!/INC`MSG=[u(getproperty,%#,banner)] just Tagged Scene %q<scene>: '%q<title>',%q<ownobjid>

&Q`SET`ACTOR_STATUS [u(cobj,scene)]=INSERT INTO vol_actor (actor_status,scene_id,character_id) VALUES (?,?,?) ON DUPLICATE KEY UPDATE actor_status=VALUES(actor_status)
&Q`GET`TAGCHECK [u(cobj,scene)]=SELECT actor_status from volv_actor WHERE scene_id=? AND character_id=?

&INC`LOG`UNTAG [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@check u(mysql,GET`tagcheck,%q<scene>,%q<t1id>)=@attach %!/INC`MSG=You are not signed up for that scene.;@attach %!/INC`LOADSCENE;@attach %!/INC`DOSQL=SET`ACTOR_STATUS,0,%q<scene>,%q<t1id>;@attach %!/INC`MSG=You have untagged Scene %0!;@attach %!/INC`MSG=[u(getproperty,%#,banner)] just un-Tagged Scene %q<scene>: '%q<title>',%q<ownobjid>

&INC`LOG`SLOTS [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),strmatch(%:,%q<ownobjid>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`INT=%1;@attach %!/INC`DOSQL=SET`SLOTS,%q<value>,%q<scene>;@attach %!/INC`MSG=Scene 1: %q<title> now allows [if(%q<value>,%q<value>,unlimited)] taggers!,setunion(%: %q<ownobjid>,)

&Q`SET`SLOTS [u(cobj,scene)]=UPDATE vol_scene SET scene_max_tags=? WHERE scene_id=?

&INC`LOG`INVITE [u(cobj,scene)]=@check isdbref(u(cobj,meetme))=@attach %!/INC`MSG=ERROR: Meetme System is not installed.;@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check strmatch(%:,%q<ownobjid>)=@attach %!/INC`MSG=ERROR: Permission denied.;@check words(u(setr,invites,u(setr,tagged,u(filter,ISOBJID,u(mysql,get`tagobjids,%q<scene>)))))=@attach %!/INC`MSG=ERROR: No valid recipients to invite.;@dolist/inline %q<invites>={@trigger/spoof/clearregs [u(cobj,meetme)]/INC`SUMMON=##}

&FUN`FORMATPOST [u(cobj,scene)]=ansi(h,Title:) %0%R[ansi(h,Posted by:)] %1%R[ansi(h,Scheduled Time:)] %2%R[repeat(-,78)]%R%3

&INC`LOG`MINE [u(cobj,scene)]=@attach %!/INC`LOG`UPCOMING=,,1

&INC`LOG`UPCOMING [u(cobj,scene)]=@select/inline strlen(%0)=>0,{@attach %!/INC`LOG`DETAILS},{th u(setq,banner,u(conf,BANNER));@pemit %#=u(HEADER,if(%2,Your%b)Upcoming Scenes - [u(choosegame,timefmt($Z,,u(gettz,%#)),ptimefmt($Z,,u(gettz,%#)))]);th u(setq,alts,iter(u(alts,%#),objid(%i0)));@pemit %#=u(header,u(setr,last,u(choosegame,timefmt($a $b $d $Y $Z,secs(),u(gettz,%#)),ptimefmt($a $b $d $Y $Z,secs(),u(gettz,%#)))));@dolist/inline/nobreak/delimit [chr(176)] [u(mysql3,if(%2,GET`MINE,GET`UPCOMING),if(%2,u(SQL`IN`STRING,%q<alts>),%q<t1id>),%q<t1id>)]={th u(setq,data,u(choosegame,%i0,%di0));th u(setq,tagged,u(mysql,GET`TAGOBJIDS,elements(%q<data>,1,chr(177))));@stop cand(%2,not(cor(match(%q<alts>,elements(%q<data>,4,chr(177))),words(setinter(%q<alts>,%q<tagged>)))));th u(setq,time,elements(%q<data>,3,chr(177)));@select/inline not(strmatch(%q<last>,u(setr,last,u(choosegame,timefmt($a $b $d $Y $Z,%q<time>,u(gettz,%#)),ptimefmt($a $b $d $Y $Z,%q<time>,u(gettz,%#))))))=1,{@pemit %#=u(HEADER,%q<last>)};@pemit %#=align(6 5 36 20 7,if(strmatch(%:,u(setr,ownobjid,elements(%q<data>,4,chr(177)))),ansi(hg,*),if(match(%q<alts>,elements(%q<data>,4,chr(177))),ansi(g,*),if(match(%q<tagged>,%:),ansi(hr,*),if(words(setinter(%q<tagged>,%q<alts>)),ansi(g,*),%b))))[rjust(words(%q<tagged>),2,0)]/[rjust(if(elements(%q<data>,6,chr(177)),elements(%q<data>,6,chr(177)),--),2,0)],u(pueblize,u(setr,scene,elements(%q<data>,1,chr(177))),+log %q<scene>),elements(%q<data>,2,chr(177)),if(isobjid(%q<ownobjid>),u(pueblize,if(%q<banner>,u(getproperty,%q<ownobjid>,Banner),u(getmoniker,%q<ownobjid>)),+finger [name(%q<ownobjid>)]),ansi(hx,elements(%q<data>,5,chr(177)))),elements(u(fancytime,%q<time>,%#),3))};@pemit %#=u(FOOTER)}

&Q`GET`UPCOMING [u(cobj,scene)]=SELECT scene_id,scene_title_ansi,scene_date_scheduled_secs,runner_objid,runner_name,scene_max_tags FROM volv_scene WHERE scene_date_scheduled >= UTC_TIMESTAMP() - INTERVAL 10 HOUR ORDER by scene_date_scheduled

&Q`GET`MINE [u(cobj,scene)]=SELECT scene_id,scene_title_ansi,scene_date_scheduled_secs,runner_objid,runner_name,scene_max_tags FROM volv_scene WHERE (runner_objid IN (!) OR scene_id IN (SELECT scene_id FROM volv_actor WHERE character_id=? AND actor_status=>0)) AND scene_date_scheduled >= UTC_TIMESTAMP() - INTERVAL 10 HOUR ORDER BY scene_date_scheduled

&Q`GET`TAGOBJIDS [u(cobj,scene)]=SELECT character_objid FROM volv_actor WHERE scene_id=? AND actor_status=1

&INC`LOG`RESCHEDULE [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),strmatch(%:,%q<ownobjid>))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`FUTURE=%1;@attach %!/INC`DOSQL=SET`SCHEDULEDATE,%q<value>,%q<scene>;@attach %!/INC`MSGSCENE=%q<scene>,u(getmoniker,%#) rescheduled the Scene!;@attach %!/INC`UPDATEBB
&Q`SET`SCHEDULEDATE [u(cobj,scene)]=UPDATE vol_scene SET scene_date_scheduled=FROM_UNIXTIME(?),scene_status=2,scene_date_started=SET_NULL WHERE scene_id=?

&INC`LOG`MAIL [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=%0;@attach %!/INC`LOADSCENE;@check cor(u(isadmin,%#),strmatch(%:,%q<ownobjid>))=@attach %!/INC`MSG=ERROR: Permission denied.;@check words(u(setr,tagged,u(mysql,GET`TAGOBJIDS,%q<scene>)))=@attach %!/INC`MSG=ERROR: Nobody has tagged the scene!;@attach %!/INC`MSG=The OBJID list of recipients to use for a @mail is: %q<tagged>

@@ PLOT SECTION

&SWITCHES`PLOT`PLAYER [u(cobj,scene)]=OLD|LINK|UNLINK|GRANT|REVOKE|PITCH|OUTCOME|START|END
&SWITCHES`PLOT`ADMIN [u(cobj,scene)]=CREATE|TITLE|ADDRUNNER|REMRUNNER|DELETE

&INC`PLOT`MAIN [u(cobj,scene)]=@select/inline gt(strlen(%0),0)=1,{@attach %!/INC`PLOT`DETAILS},0,{@attach %!/INC`PLOT`LIST}

&INC`PLOT`OLD [u(cobj,scene)]=@attach %!/INC`PLOT`LIST=%0,1

&INC`PLOT`LIST [u(cobj,scene)]=@pemit %#=u(HEADER,if(%1,Old,Current) Plots);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(4 25 20 26,ID,Title,Runners,Pitch));@pemit %#=u(separator);@dolist/inline/delimit [chr(176)] [u(mysql3,GET`[if(%1,ALLPLOTS,RUNNINGPLOTS)])]={@pemit %#=ansi(if(mod(inum(0),2),u(color,%#,ROW_A),u(color,%#,ROW_B)),u(FUN`FORMATPLOT,u(choosegame,%i0,%d0)))};@pemit %#=u(footer)

&Q`GET`ALLPLOTS [u(cobj,scene)]=SELECT plot_id,plot_title,runner_names,helper_names,plot_date_start_secs,plot_date_end_secs,LEFT(plot_pitch,30) FROM volv_plot_agg WHERE plot_date_end IS NOT NULL AND plot_date_end<NOW();

&Q`GET`RUNNINGPLOTS [u(cobj,scene)]=SELECT plot_id,plot_title,runner_names,helper_names,plot_date_start_secs,plot_date_end_secs,LEFT(plot_pitch,30) FROM volv_plot_agg WHERE plot_date_end IS NULL;

&FUN`FORMATPLOT [u(cobj,scene)]=align(4 25 20 26,u(pueblize,elements(%0,1,chr(177)),+plot [elements(%0,1,chr(177))]),elements(%0,2,chr(177)),iter(elements(%0,3,chr(177)),%i0,|,\,%b)[if(strlen(elements(%0,4,chr(177))),%b+[iter(elements(%0,2,chr(177)),%i0,|,\,%b)])],elements(%0,7,chr(177)))

&INC`VALID`PLOTNAME [u(cobj,scene)]=@check strlen(u(setr,title,trim(stripansi(%0))))=@attach %!/INC`MSG=ERROR: Plots must have titles!;@stop cand(u(setr,exist_id,u(mysql,PLOT`TITLE_MATCH,%q<title>)),neq(%1,%q<exist_id>))=@attach %!/INC`MSG=ERROR: That title is not unique. Another Plot already uses it!

&INC`FINDPLOT [u(cobj,scene)]=@select/inline isint(%0)=1,{@check u(setr,plot_id,u(mysql,GET`PLOTCHECK,%0))=@attach %!/INC`MSG=ERROR: Plot ID not found!},0,{@check u(setr,plot_id,u(strfirstof,u(mysql,PLOT`TITLE_MATCH,%0),u(mysql,PLOT`TITLE_WILD,sqlescape(%0))))=@attach %!/INC`MSG=ERROR: Plot '%0' not found!};@attach %!/INC`LOADPLOT=%q<plot_id>,1

&Q`PLOT`TITLE_MATCH [u(Cobj,scene)]=SELECT plot_id FROM vol_plot WHERE plot_title=? LIMIT 1
&Q`PLOT`TITLE_WILD [u(Cobj,scene)]=SELECT plot_id FROM vol_plot WHERE plot_title LIKE '!%' ORDER BY plot_title LIMIT 1

&INC`LOADPLOT [u(cobj,scene)]=th u(setq,pldata,u(mysql3,LOAD`PLOT,%0));th iter(id title pitch outcome start end runnerobjids runnernames helperobjids helpernames,u(setq,pl%1%i0,elements(%q<pldata>,inum(0),chr(177))))

&Q`LOAD`PLOT [u(cobj,scene)]=SELECT plot_id,plot_title,plot_pitch,plot_outcome,plot_date_start_secs,plot_date_end_secs,runner_objids,runner_names,helper_objids,helper_names FROM volv_plot_agg WHERE plot_id=?

&Q`GET`PLOTCHECK [u(cobj,scene)]=SELECT plot_id FROM vol_plot WHERE plot_id=?

&INC`PLOT`DETAILS [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@pemit %#=u(HEADER,Plot ID %q<pl1id>: %q<pl1title>);@pemit %#=ansi(h,Runner:) %q<pl1ownname>%R[ansi(h,Co-Runners:)]%b[iter(%q<pl1coobjids>,u(getmoniker,%i0),%b,\,%b)]%R[ansi(h,Schedule:)] [u(fancytime,%q<pl1start>)] to [u(fancytime,%q<pl1end>)];@pemit %#=ansi(h,Pitch:) %q<pl1pitch>;@pemit %#=ansi(h,Outcome:) %q<pl1outcome>;@pemit %#=u(separator,Scenes);@dolist/inline/delimit [chr(176)] [u(mysql3,PLOT`SCENES,%q<pl1id>)]={};@pemit %#=u(FOOTER)

&INC`PLOT`CREATE [u(cobj,scene)]=@attach %!/INC`VALID`PLOTNAME=%0;@check strlen(%1)=@attach %!/INC`MSG=ERROR: The Plot needs a Pitch!;@attach %!/INC`DOSQL=NEW`PLOT/plot_id,%q<title>,%1;@attach %!/INC`DOSQL=SET`PLOT_PITCH_RENDER,u(render,%1),%q<plot_id>;@attach %!/INC`MSG=Plot %q<plot_id>: '%q<title>' added!

&Q`NEW`PLOT [u(cobj,scene)]=INSERT INTO vol_plot (plot_title,plot_pitch,plot_date_start) VALUES (?,?,UTC_TIMESTAMP())

&Q`SET`PLOT_PITCH_RENDER [u(Cobj,scene)]=UPDATE vol_plot SET plot_pitch_render=? WHERE plot_id=?

&INC`PLOT`TITLE [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@attach %!/INC`VALID`PLOTNAME=%1,%q<pl1id>;@check strlen(%1)=@attach %!/INC`MSG=The new title field is empty!;@attach %!/INC`DOSQL=SET`PLOTTITLE,%1,%q<pl1id>;@attach %!/INC`MSG=The Plot title was changed.

&Q`SET`PLOTTITLE [u(cobj,scene)]=UPDATE vol_plot SET plot_title=? WHERE plot_id=?

&INC`PLOT`PITCH [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%1)=@attach %!/INC`MSG=The new Pitch field is empty!;@attach %!/INC`DOSQL=SET`PLOTPITCH,%1,%q<pl1id>;@attach %!/INC`DOSQL=SET`PLOT_PITCH_RENDER,u(render,%1),%q<pl1id>;@attach %!/INC`MSG=The Plot Pitch was changed.

&Q`SET`PLOTPITCH [u(cobj,scene)]=UPDATE vol_plot SET plot_pitch=? WHERE plot_id=?

&INC`PLOT`OUTCOME [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@check strlen(%1)=@attach %!/INC`MSG=The new Outcome field is empty!;@attach %!/INC`DOSQL=SET`PLOTOUTCOME,%1,%q<pl1id>;@attach %!/INC`DOSQL=SET`PLOT_OUTCOME_RENDER,u(render,%1),%q<pl1id>;@attach %!/INC`MSG=The Plot Outcome was changed.

&Q`SET`PLOTOUTCOME [u(cobj,scene)]=UPDATE vol_plot SET plot_outcome=? WHERE plot_id=?
&Q`SET`PLOT_OUTCOME_RENDER [u(Cobj,scene)]=UPDATE vol_plot SET plot_outcome_render=? WHERE plot_id=?

&INC`PLOT`START [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`TIME=%1;@attach %!/INC`DOSQL=SET`PLOTSTART,%q<value>,%q<pl1id>;@attach %!/INC`MSG=The plot's Start date was set to %q<valueformat>

&INC`PLOT`END [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@select/inline %1=0,{@attach %!/INC`DOSQL=SET`PLOTNOEND,%q<pl1id>;@attach %!/INC`MSG=The Plot's End date was cleared.},{@attach %!/INC`VALID`TIME=%1;@attach %!/INC`DOSQL=SET`PLOTEND,%q<value>,%q<pl1id>;@attach %!/INC`MSG=The plot's End date was set to %q<valueformat>}

&Q`SET`PLOTSTART [u(cobj,scene)]=UPDATE vol_plot SET plot_date_start=FROM_UNIXTIME(?) WHERE plot_id=?
&Q`SET`PLOTEND [u(cobj,scene)]=UPDATE vol_plot SET plot_date_end=FROM_UNIXTIME(?) WHERE plot_id=?
&Q`SET`PLOTNOEND [u(cobj,scene)]=UPDATE vol_plot SET plot_date_end=SET_NULL WHERE plot_id=?

&INC`PLOT`ADDRUNNER [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@attach %!/INC`CHECKPC=%1,1;@stop match(%q<pl1runnerobjids>,%q<t1objid>)=@attach %!/INC`MSG=ERROR: %q<t1name> is already a Runner!;@attach %!/INC`DOSQL=SET`PLOTRUNNER,%q<t1id>,%q<pl1id>,2;@attach %!/INC`MSG=%q<t1name> is now a Runner for %q<pl1title>!;@attach %!/INC`MSG`NOTICE=You are now a Runner for Plot %q<pl1id>: '%q<pl1title>',%q<t1>;
&Q`SET`PLOTRUNNER [u(cobj,scene)]=INSERT INTO vol_runner (character_id,plot_id,runner_type) VALUES (?,?,?) ON DUPLICATE KEY UPDATE runner_type=VALUES(runner_type)

&INC`PLOT`REMRUNNER [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@attach %!/INC`CHECKPC=%1,1;@check match(%q<pl1runnerobjids>,%q<t1objid>)=@attach %!/INC`MSG=ERROR: %q<t1name> is not a Runner!;@attach %!/INC`DOSQL=SET`PLOTRUNNER,%q<t1id>,%q<pl1id>,0;@attach %!/INC`MSG=%q<t1name> is no longer a Runner for %q<pl1title>!;@attach %!/INC`MSG`NOTICE=You are no longer a Runner for Plot %q<pl1id>: '%q<pl1title>',%q<t1>;

&INC`PLOT`GRANT [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=%1,1;@stop match(setunion(%q<pl1helperobjids>,%q<pl1runnerobjids>),%q<t1objid>)=@attach %!/INC`MSG=ERROR: %q<t1name> already has permissions!;@attach %!/INC`DOSQL=SET`PLOTRUNNER,%q<t1id>,%q<pl1id>,1;@attach %!/INC`MSG=%q<t1name> is now a Runner for %q<pl1title>!;@attach %!/INC`MSG`NOTICE=You are now a Runner for Plot %q<pl1id>: '%q<pl1title>',%q<t1>;

&INC`PLOT`REVOKE [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`CHECKPC=%1,1;@check match(%q<pl1helperobjids>,%:)=@attach %!/INC`MSG=ERROR: %q<t1name> has no permissions to revoke!;@attach %!/INC`DOSQL=SET`PLOTRUNNER,%q<t1id>,%q<pl1id>,0;@attach %!/INC`MSG=%q<t1name> is no longer a Runner for %q<pl1title>!;@attach %!/INC`MSG`NOTICE=You are no longer a Runner for Plot %q<pl1id>: '%q<pl1title>',%q<t1>;

&INC`PLOT`LINK [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids> %q<pl1helperobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`SCENE=%1;@attach %!/INC`LOADSCENE=%1;@attach %!/INC`DOSQL=LINk`SCENE,%q<pl1id>,%q<scene>;@attach %!/INC`MSG=Scene %q<scene>: '%q<title>' is now a part of Plot %q<pl1id>: '%q<pl1title>'.

&INC`PLOT`UNLINK [u(cobj,scene)]=@attach %!/INC`FINDPLOT=%0;@check cor(u(isadmin,%#),match(%q<pl1runnerobjids> %q<pl1helperobjids>,%:))=@attach %!/INC`MSG=ERROR: Permission denied.;@attach %!/INC`VALID`SCENE=%1;@attach %!/INC`LOADSCENE=%1;@attach %!/INC`DOSQL=UNLINk`SCENE,%q<pl1id>,%q<scene>;@attach %!/INC`MSG=Scene %q<scene>: '%q<title>' is now a part of Plot %q<pl1id>: '%q<pl1title>'.

&Q`LINK`SCENE [u(cobj,scene)]=INSERT IGNORE INTO vol_plotlink (plot_id,scene_id) VALUES (?,?)
&Q`UNLINK`SCENE [u(Cobj,scene)]=DELETE FROM vol_plotlink WHERE plot_id=? AND scene_id=?

&INC`PLOT`DELETE [u(cobj,scene)]=@attach %!/INC`VALPLOT=%0;@check strmatch(%1,%q<pl1title>)=@attach %!/INC`MSG=ERROR: Validation requires you to enter the Scene's Title as well.;@attach %!/INC`VERIFY={ansi(hr,WARNING:) This will DELETE Plot %q<pl1id>: '%q<pl1title>''. Are you SURE? enter the same command again within ten seconds to verify!},DELETE PLOT %q<plot>;@attach %!/INC`DOSQL=DELETE`PLOT,%q<pl1id>;@attach %!/INC`MSG=Plot deleted!
&Q`DELETE`PLOT [u(cobj,scene)]=DELETE FROM vol_plot WHERE plot_id=?

@@ OBSERVER section!
&INC`OBSERVER`MAIN [u(cobj,scene)]=th u(setq,new,not(get(%#/D`OBSERVER)));@attach %!/INC`MSG`ROOM=%n is [if(%q<new>,now,no longer)] an observer to the event.;&D`OBSERVER %#=%q<new>

@@ PARTNERS Section

&INC`PARTNERS`MAIN [u(cobj,scene)]=th u(setq,banner,u(conf,BANNER));@attach %!/INC`VALID`SCENE=u(strfirstof,%0,get(%#/D`SCENE));@pemit %#=u(header,Matchups for Scene: %q<scene>);@pemit %#=ansi(u(color,%#,COLUMN_NAMES),align(4 [sub(u(width,%#),6)],Pair,Participants));@pemit %#=u(separator);@dolist/inline/nobreak/delimit [chr(176)] [u(mysql3,GET`PAIRINGS,%q<scene>)]={@pemit %#=align(4 [sub(u(width,%#),6)],elements(u(choosegame,%i0,%d0),1,chr(177)),iter(elements(u(choosegame,%i0,%d0),2,chr(177)),if(%q<banner>,u(getproperty,%i0,banner),u(getmoniker,%i0)),%b,\,%b))};@pemit %#=u(footer)

&Q`GET`PAIRINGS [u(cobj,scene)]=SELECT partner_slot,character_objids FROM volv_scene_partner_agg WHERE scene_id=? AND CHAR_LENGTH(character_objids)>0 ORDER BY partner_slot

&INC`PARTNERS`JOIN [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=get(%#/D`SCENE);@attach %!/INC`LOADSCENE;@check eq(%q<status>,0)=@attach %!/INC`MSG=That scene is not Active!;@attach %!/INC`VALID`POSINT=%0;@attach %!/INC`DOSQL=ADD`PAIRING,%q<scene>,%q<value>,%q<t1id>;@attach %!/INC`MSGSCENE=%q<scene>,{%n has joined Scene %q<scene>'s [u(numth,%q<value>)] pairing.}

&Q`ADD`PAIRING [u(cobj,scene)]=INSERT INTO vol_scene_partner (scene_id,partner_slot,character_id) VALUES (?,?,?) ON DUPLICATE KEY UPDATE partner_slot=VALUES(partner_slot)

&INC`PARTNERS`LEAVE [u(cobj,scene)]=@attach %!/INC`VALID`SCENE=get(%#/D`SCENE);@attach %!/INC`LOADSCENE;@check eq(%q<status>,0)=@attach %!/INC`MSG=That scene is not Active!;@check u(setr,value,u(mysql,CHECK`PAIRING,%q<scene>,%q<t1id>))=@attach %!/INC`MSG=[ansi(hr,ERROR:)] You are not joined to that pairing!;@attach %!/INC`DOSQL=DEL`PAIRING,%q<scene>,%q<t1id>;@attach %!/INC`MSGSCENE=%q<scene>,{%n has left Scene %q<scene>'s [u(numth,%q<value>)] pairing.}

&Q`CHECK`PAIRING [u(cobj,scene)]=SELECT partner_slot FROM vol_scene_partner WHERE scene_id=? AND character_id=?
&Q`DEL`PAIRING [u(cobj,scene)]=DELETE FROM vol_scene_partner WHERE scene_id=? AND character_id=?


&HLP`+SCENE [u(cobj,scene)]=SceneSys is a scene scheduling/logging tool that works alongside [mudname()]'s Wiki. The original version was designed by Mercutio @ M*U*S*H.%R[ansi(hc,Aliases:)] +log%R%R[ansi(hc,Setting up)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+scene/id \[<target>\])] - Show your own unique Char_id. Or someone else's. This is used for linking to the wiki.%R[ansi(h,+options timezone=<code>)] - You must set your timezone for this system to work. Refer to help timezones2)]%R%R[ansi(hc,SceneRunner Commands)]%RThese are for anyone who wants to start a scene.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+scene/create <title text>)] - Creates a new scene.%R[ansi(h,+scene/loudcreate <title text>)] - Like /create but announces it on the RP channel.%R[ansi(h,+scene/pitch <id>=<text>)] - Changes a scene's Pitch (the text for an upcoming scene.)%R[ansi(h,+scene/outcome <id>=<text>)] - Gives a scene a description/short summary.%R[ansi(h,+scene/slots <id>=<#>)] - Restricts a scene tag count for when scenes are full. Default is 0 - Unlimited.%R[ansi(h,+scene/finish \[<id>\])] - Finishes a scene. ID will be current scene if not specified.%R[ansi(h,+scene/pause \[<id>\])] - Pauses a scene.%R[ansi(h,+scene/continue \[<id>\])] - Resumes a scene that was paused or finished. %R%RThe following are for Scheduling Scenes:%R[ansi(h,+scene/schedule <time>/<title>=<description>)] - Schedules an upcoming scene. <time> is from your timezone-perspective. Acceptable format: [u(choosegame,timefmt($b $d $H:$M,,u(gettz,%#)),ptimefmt($b $d $H:$M,,u(gettz,%#)))]. Current year assumed if none given.%R[ansi(h,+scene/reschedule <id>=<time>)] - Changes a scene's scheduled time. <time> is same as adding.%R[ansi(h,+scene/mail <id>=<message>)] - @mails all who have tagged a scene.%R[ansi(h,+scene/invite <id>)] - Automatically sends out summon requests to taggers.%R[ansi(h,+scene/start <id>)] - Convert a scheduled scene into an active one. Get posing!%R[ansi(h,+scene/delete <id>=<title>)] - Delete a scene of any sort. Non-admin can only delete scenes that have no poses yet!)]%R%R[ansi(hc,Participant Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+scene/upcoming)] - Display the upcoming scene calendar. Also responds to: +scenes\, +upcoming\, +events\, and +schedule.%R[ansi(h,+scene/mine)] - As /upcoming but lists only those scenes you have either tagged or created.%R[ansi(h,+scene/tag <id>)] - Declare interest in an upcoming scene. Remove with /untag.%R[ansi(h,+scene/join \[<id or player>\])] - Joins a scene.%R[ansi(h,+scene/leave)] - Cease being logged.%R[ansi(h,+scene/undo \[<pose id>\])] - Undoes your last pose or a specified pose. Can re-enable the pose using /redo.%R[ansi(h,+scene/edit <pose id>=<before>^^^<after>)] - Edit a recorded pose. useful for getting rid of typos. Instead of <pose id> you can instead use 'last' to target the last pose. +scene/edit last=...%R[ansi(h,+scene/recall <id>=<# of lines>)] - Displays scene's recorded poses.%R[ansi(h,+scene/spoof <altname>)] - Record poses as one of your alts. Use without arguments to clear.%R[ansi(h,+observer)] - Marks you as 'just watching'.%R%RTo be recorded\, poses (10+ words) must be made near others likewise in the scene.)]%R%R[ansi(hc,Listing Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+scene)] - Displays all scenes you are currently participating in or running that aren't finished.%R[ansi(h,+scene/old)] - Show all of the finished scenes you've been in or run.%R[ansi(h,+scene <id>)] - Show details of a particular scene.%R[ansi(h,+scene/who \[<id>\])] - Quick listing of who has this scene as their active scene.%R[ansi(h,+scene/with <name>\[=<name2>\])] - List what scenes you have in common with a given player or between X and Y players. Can get spammy.%R%RAll Listing commands support an additional /# switch for different pages. For instance\, +scene/old/3.%R%RUsage Procedure: 1. Creator starts scene. 2. Others join scene. 3. Scene is recorded as it's run. 4. Creator uses /finish. 5. Use the PHP intermediary site to format and post to wiki.)]
+help/add Roleplaying/+scene=[u(cobj,scene)]/HLP`+SCENE

&SHLP`+SCENE [u(cobj,scene)]=[ansi(hc,Wizard Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+scene/delete <id>)] - Deletes a scene and all recorded poses.%R[ansi(h,+scene/merge <player>=<char id>)] - This command exists for when a character is deleted and a new one is created and the new character needs to 'take the place' of the old one. This will re-assign the given <char id> to player and change any of the player's existing scenesys information to use that ID.)]
+shelp/add Roleplaying/+scene=[u(cobj,scene)]/SHLP`+SCENE

&HLP`+PARTNERS [u(cobj,scene)]=The Partners system helps keep track of matchups within scenes. Examples include a task force, a dogfight, a duel. The idea is that this will help participants of large scenes and scenerunners easily keep track of who is grouped together, who is fighting who, etc.%R%R[ansi(hc,Commands)]%RThese commands use the currently joined scene contextually. In other words, each list of matchups is unique-per-+scene.%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+partners)] - List all matchups in the scene.%R[ansi(h,+partners/join <slot>)] - Join a particular matchup. <slot> must be a number 1-15.%R[ansi(h,+partners/leave)] - Leaves your matchup.)]
+help/add Roleplaying/+partners=[u(cobj,scene)]/HLP`+PARTNERS

&HLP`+PLOT [u(cobj,scene)]=SceneSys is a scene scheduling, tracking, and logging tool that works alongside [mudname()]'s Wiki. The original version was designed by Mercutio @ M*U*S*H and some of his code remains - credits are due.%R[ansi(hc,See Also:)] [u(pueblize,+help +scene,+help +scene)]%R%R[ansi(hc,Display Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+plot)] - Show all current plots.%R[ansi(h,+plot/old)] - Show all plots in the system.%R[ansi(h,+plot <id>)] - Show a plot's details.)]%R%R[ansi(hc,Runner Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+plot/pitch <id>=<text>)] - Change a Plot's Pitch.%R[ansi(h,+plot/outcome <id>=<text>)] - Change a Plot's Outcome.%R[ansi(h,+plot/start <id>=<time>)] - Change a Plot's Start Date. +help Validators%R[ansi(h,+plot/end <id>=<time>)] - Change a Plot's End Date. When this date passes it will display only in +plot/old! To remove the End Date set it to 0.%R[ansi(h,+plot/grant <id>=<character>)] - Grant Helper status to another character.%R[ansi(h,+plot/revoke <id>=<character>)] - Removed granted Helper status.)]%R%R[ansi(hc,Helper Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+plot/link <id>=<scene>)] - Links a Scene to a Plot. Scenes can belong to more than one plot!%R[ansi(h,+plot/unlink <id>=<scene>)] - Removes a linked scene.)]
+help/add Roleplaying/+plot=[u(cobj,scene)]/HLP`+PLOT

&SHLP`+PLOT [u(cobj,scene)]=[ansi(hc,Administrator Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+plot/create <title>=<pitch>)] - Creates a new plot.%R[ansi(h,+plot/addrunner <id>=<character>)] - Give someone Runner status.%R[ansi(h,+plot/remrunner <id>=<character>)] - Remove runner status.%R[ansi(h,+plot/title <id>=<title>)] - Change a plot's title.)]
+shelp/add Roleplaying/+plot=[u(cobj,scene)]/SHLP`+PLOT

@@ POSE ORDER TRACKER - POT
&HLP`+POT [u(cobj,scene)]=+pot, or [ansi(h,Po)]se [ansi(h,T)]racker, is a system that stores poses within the room for easy retrieval for review. Sometimes, poses are lost in spam or scroll, or a player enters late and needs to see what's going on, or was disconnected when someone else posed, and that's what this system's here to aid with.%R%R[ansi(hc,Commands)]%R[align(5 [sub(u(width,%#),6)],,[ansi(h,+pot)] - Show either +pot/list or +pot/brief\, depending on /mode. \(See below.\)%R[ansi(h,+pot/list)] - show the last 15 \(or set max\) poses.%R[ansi(h,+pot/list <number>)] - Show a specified amount of poses.%R[ansi(h,+pot/max <number>)] - Set a new default number of poses to show.%R[ansi(h,+pot/brief)] - Show when people last posed and their last +summary made after that pose if they have one.%R[ansi(h,+pot/mode)] - Change the behavior of +pot. By default\, +pot uses +pot/list display style. Change mode and it will use +pot/brief instead.%R%R[ansi(h,+pot/toggle)] - THINGS used as rooms WILL support +pot if they are within an IC room. Object owners can use +pot/toggle to switch off recording. It can also enable recording in areas that are normally OOC.)]
+help/add Roleplaying/+pot=[u(cobj,scene)]/HLP`+POT

&HLP`+SUMMARY [u(cobj,scene)]=Usage: +summary <message>%R%RDisplays <message> in highlights along with your name and a note that it's a summary. This is to summarize long poses for use by both your fellow players as well as your game master (if the scene has a game master), in order to better help have an idea of what's going on. It's use in large scenes is STRONGLY encouraged. It's also used to keep track of who's posed in a given pose round, if a scene is using pose rounds.%R%RNote that <message> is meant to be short and very to the point. It shouldn't be more than two or three lines. The command will refuse to display messages that are over a certain limit.
+help/add Roleplaying/+summary=[u(cobj,scene)]/HLP`+SUMMARY

&HLP`+DONE [u(cobj,scene)]=Usage: +done%R%RDisplays a highlighted message that you are 'done'. This is usually used to keep track of who's posed in large scenes, for the convenience of the game master (if applicable) as well as other players. This is especially useful when pose rounds are being used.
+help/add Roleplaying/+done=[u(cobj,scene)]/HLP`+DONE
